// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core-x86.proto

#ifndef PROTOBUF_core_2dx86_2eproto__INCLUDED
#define PROTOBUF_core_2dx86_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "opts.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_core_2dx86_2eproto();
void protobuf_AssignDesc_core_2dx86_2eproto();
void protobuf_ShutdownFile_core_2dx86_2eproto();

class user_x86_regs_entry;
class user_x86_xsave_entry;
class user_x86_fpregs_entry;
class user_desc_t;
class thread_info_x86;

enum user_x86_regs_mode {
  NATIVE = 1,
  COMPAT = 2
};
bool user_x86_regs_mode_IsValid(int value);
const user_x86_regs_mode user_x86_regs_mode_MIN = NATIVE;
const user_x86_regs_mode user_x86_regs_mode_MAX = COMPAT;
const int user_x86_regs_mode_ARRAYSIZE = user_x86_regs_mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* user_x86_regs_mode_descriptor();
inline const ::std::string& user_x86_regs_mode_Name(user_x86_regs_mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    user_x86_regs_mode_descriptor(), value);
}
inline bool user_x86_regs_mode_Parse(
    const ::std::string& name, user_x86_regs_mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<user_x86_regs_mode>(
    user_x86_regs_mode_descriptor(), name, value);
}
// ===================================================================

class user_x86_regs_entry : public ::google::protobuf::Message {
 public:
  user_x86_regs_entry();
  virtual ~user_x86_regs_entry();

  user_x86_regs_entry(const user_x86_regs_entry& from);

  inline user_x86_regs_entry& operator=(const user_x86_regs_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_x86_regs_entry& default_instance();

  void Swap(user_x86_regs_entry* other);

  // implements Message ----------------------------------------------

  user_x86_regs_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_x86_regs_entry& from);
  void MergeFrom(const user_x86_regs_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 r15 = 1;
  inline bool has_r15() const;
  inline void clear_r15();
  static const int kR15FieldNumber = 1;
  inline ::google::protobuf::uint64 r15() const;
  inline void set_r15(::google::protobuf::uint64 value);

  // required uint64 r14 = 2;
  inline bool has_r14() const;
  inline void clear_r14();
  static const int kR14FieldNumber = 2;
  inline ::google::protobuf::uint64 r14() const;
  inline void set_r14(::google::protobuf::uint64 value);

  // required uint64 r13 = 3;
  inline bool has_r13() const;
  inline void clear_r13();
  static const int kR13FieldNumber = 3;
  inline ::google::protobuf::uint64 r13() const;
  inline void set_r13(::google::protobuf::uint64 value);

  // required uint64 r12 = 4;
  inline bool has_r12() const;
  inline void clear_r12();
  static const int kR12FieldNumber = 4;
  inline ::google::protobuf::uint64 r12() const;
  inline void set_r12(::google::protobuf::uint64 value);

  // required uint64 bp = 5;
  inline bool has_bp() const;
  inline void clear_bp();
  static const int kBpFieldNumber = 5;
  inline ::google::protobuf::uint64 bp() const;
  inline void set_bp(::google::protobuf::uint64 value);

  // required uint64 bx = 6;
  inline bool has_bx() const;
  inline void clear_bx();
  static const int kBxFieldNumber = 6;
  inline ::google::protobuf::uint64 bx() const;
  inline void set_bx(::google::protobuf::uint64 value);

  // required uint64 r11 = 7;
  inline bool has_r11() const;
  inline void clear_r11();
  static const int kR11FieldNumber = 7;
  inline ::google::protobuf::uint64 r11() const;
  inline void set_r11(::google::protobuf::uint64 value);

  // required uint64 r10 = 8;
  inline bool has_r10() const;
  inline void clear_r10();
  static const int kR10FieldNumber = 8;
  inline ::google::protobuf::uint64 r10() const;
  inline void set_r10(::google::protobuf::uint64 value);

  // required uint64 r9 = 9;
  inline bool has_r9() const;
  inline void clear_r9();
  static const int kR9FieldNumber = 9;
  inline ::google::protobuf::uint64 r9() const;
  inline void set_r9(::google::protobuf::uint64 value);

  // required uint64 r8 = 10;
  inline bool has_r8() const;
  inline void clear_r8();
  static const int kR8FieldNumber = 10;
  inline ::google::protobuf::uint64 r8() const;
  inline void set_r8(::google::protobuf::uint64 value);

  // required uint64 ax = 11;
  inline bool has_ax() const;
  inline void clear_ax();
  static const int kAxFieldNumber = 11;
  inline ::google::protobuf::uint64 ax() const;
  inline void set_ax(::google::protobuf::uint64 value);

  // required uint64 cx = 12;
  inline bool has_cx() const;
  inline void clear_cx();
  static const int kCxFieldNumber = 12;
  inline ::google::protobuf::uint64 cx() const;
  inline void set_cx(::google::protobuf::uint64 value);

  // required uint64 dx = 13;
  inline bool has_dx() const;
  inline void clear_dx();
  static const int kDxFieldNumber = 13;
  inline ::google::protobuf::uint64 dx() const;
  inline void set_dx(::google::protobuf::uint64 value);

  // required uint64 si = 14;
  inline bool has_si() const;
  inline void clear_si();
  static const int kSiFieldNumber = 14;
  inline ::google::protobuf::uint64 si() const;
  inline void set_si(::google::protobuf::uint64 value);

  // required uint64 di = 15;
  inline bool has_di() const;
  inline void clear_di();
  static const int kDiFieldNumber = 15;
  inline ::google::protobuf::uint64 di() const;
  inline void set_di(::google::protobuf::uint64 value);

  // required uint64 orig_ax = 16;
  inline bool has_orig_ax() const;
  inline void clear_orig_ax();
  static const int kOrigAxFieldNumber = 16;
  inline ::google::protobuf::uint64 orig_ax() const;
  inline void set_orig_ax(::google::protobuf::uint64 value);

  // required uint64 ip = 17;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 17;
  inline ::google::protobuf::uint64 ip() const;
  inline void set_ip(::google::protobuf::uint64 value);

  // required uint64 cs = 18;
  inline bool has_cs() const;
  inline void clear_cs();
  static const int kCsFieldNumber = 18;
  inline ::google::protobuf::uint64 cs() const;
  inline void set_cs(::google::protobuf::uint64 value);

  // required uint64 flags = 19;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 19;
  inline ::google::protobuf::uint64 flags() const;
  inline void set_flags(::google::protobuf::uint64 value);

  // required uint64 sp = 20;
  inline bool has_sp() const;
  inline void clear_sp();
  static const int kSpFieldNumber = 20;
  inline ::google::protobuf::uint64 sp() const;
  inline void set_sp(::google::protobuf::uint64 value);

  // required uint64 ss = 21;
  inline bool has_ss() const;
  inline void clear_ss();
  static const int kSsFieldNumber = 21;
  inline ::google::protobuf::uint64 ss() const;
  inline void set_ss(::google::protobuf::uint64 value);

  // required uint64 fs_base = 22;
  inline bool has_fs_base() const;
  inline void clear_fs_base();
  static const int kFsBaseFieldNumber = 22;
  inline ::google::protobuf::uint64 fs_base() const;
  inline void set_fs_base(::google::protobuf::uint64 value);

  // required uint64 gs_base = 23;
  inline bool has_gs_base() const;
  inline void clear_gs_base();
  static const int kGsBaseFieldNumber = 23;
  inline ::google::protobuf::uint64 gs_base() const;
  inline void set_gs_base(::google::protobuf::uint64 value);

  // required uint64 ds = 24;
  inline bool has_ds() const;
  inline void clear_ds();
  static const int kDsFieldNumber = 24;
  inline ::google::protobuf::uint64 ds() const;
  inline void set_ds(::google::protobuf::uint64 value);

  // required uint64 es = 25;
  inline bool has_es() const;
  inline void clear_es();
  static const int kEsFieldNumber = 25;
  inline ::google::protobuf::uint64 es() const;
  inline void set_es(::google::protobuf::uint64 value);

  // required uint64 fs = 26;
  inline bool has_fs() const;
  inline void clear_fs();
  static const int kFsFieldNumber = 26;
  inline ::google::protobuf::uint64 fs() const;
  inline void set_fs(::google::protobuf::uint64 value);

  // required uint64 gs = 27;
  inline bool has_gs() const;
  inline void clear_gs();
  static const int kGsFieldNumber = 27;
  inline ::google::protobuf::uint64 gs() const;
  inline void set_gs(::google::protobuf::uint64 value);

  // optional .user_x86_regs_mode mode = 28 [default = NATIVE];
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 28;
  inline ::user_x86_regs_mode mode() const;
  inline void set_mode(::user_x86_regs_mode value);

  // @@protoc_insertion_point(class_scope:user_x86_regs_entry)
 private:
  inline void set_has_r15();
  inline void clear_has_r15();
  inline void set_has_r14();
  inline void clear_has_r14();
  inline void set_has_r13();
  inline void clear_has_r13();
  inline void set_has_r12();
  inline void clear_has_r12();
  inline void set_has_bp();
  inline void clear_has_bp();
  inline void set_has_bx();
  inline void clear_has_bx();
  inline void set_has_r11();
  inline void clear_has_r11();
  inline void set_has_r10();
  inline void clear_has_r10();
  inline void set_has_r9();
  inline void clear_has_r9();
  inline void set_has_r8();
  inline void clear_has_r8();
  inline void set_has_ax();
  inline void clear_has_ax();
  inline void set_has_cx();
  inline void clear_has_cx();
  inline void set_has_dx();
  inline void clear_has_dx();
  inline void set_has_si();
  inline void clear_has_si();
  inline void set_has_di();
  inline void clear_has_di();
  inline void set_has_orig_ax();
  inline void clear_has_orig_ax();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_cs();
  inline void clear_has_cs();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_sp();
  inline void clear_has_sp();
  inline void set_has_ss();
  inline void clear_has_ss();
  inline void set_has_fs_base();
  inline void clear_has_fs_base();
  inline void set_has_gs_base();
  inline void clear_has_gs_base();
  inline void set_has_ds();
  inline void clear_has_ds();
  inline void set_has_es();
  inline void clear_has_es();
  inline void set_has_fs();
  inline void clear_has_fs();
  inline void set_has_gs();
  inline void clear_has_gs();
  inline void set_has_mode();
  inline void clear_has_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 r15_;
  ::google::protobuf::uint64 r14_;
  ::google::protobuf::uint64 r13_;
  ::google::protobuf::uint64 r12_;
  ::google::protobuf::uint64 bp_;
  ::google::protobuf::uint64 bx_;
  ::google::protobuf::uint64 r11_;
  ::google::protobuf::uint64 r10_;
  ::google::protobuf::uint64 r9_;
  ::google::protobuf::uint64 r8_;
  ::google::protobuf::uint64 ax_;
  ::google::protobuf::uint64 cx_;
  ::google::protobuf::uint64 dx_;
  ::google::protobuf::uint64 si_;
  ::google::protobuf::uint64 di_;
  ::google::protobuf::uint64 orig_ax_;
  ::google::protobuf::uint64 ip_;
  ::google::protobuf::uint64 cs_;
  ::google::protobuf::uint64 flags_;
  ::google::protobuf::uint64 sp_;
  ::google::protobuf::uint64 ss_;
  ::google::protobuf::uint64 fs_base_;
  ::google::protobuf::uint64 gs_base_;
  ::google::protobuf::uint64 ds_;
  ::google::protobuf::uint64 es_;
  ::google::protobuf::uint64 fs_;
  ::google::protobuf::uint64 gs_;
  int mode_;
  friend void  protobuf_AddDesc_core_2dx86_2eproto();
  friend void protobuf_AssignDesc_core_2dx86_2eproto();
  friend void protobuf_ShutdownFile_core_2dx86_2eproto();

  void InitAsDefaultInstance();
  static user_x86_regs_entry* default_instance_;
};
// -------------------------------------------------------------------

class user_x86_xsave_entry : public ::google::protobuf::Message {
 public:
  user_x86_xsave_entry();
  virtual ~user_x86_xsave_entry();

  user_x86_xsave_entry(const user_x86_xsave_entry& from);

  inline user_x86_xsave_entry& operator=(const user_x86_xsave_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_x86_xsave_entry& default_instance();

  void Swap(user_x86_xsave_entry* other);

  // implements Message ----------------------------------------------

  user_x86_xsave_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_x86_xsave_entry& from);
  void MergeFrom(const user_x86_xsave_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 xstate_bv = 1;
  inline bool has_xstate_bv() const;
  inline void clear_xstate_bv();
  static const int kXstateBvFieldNumber = 1;
  inline ::google::protobuf::uint64 xstate_bv() const;
  inline void set_xstate_bv(::google::protobuf::uint64 value);

  // repeated uint32 ymmh_space = 2;
  inline int ymmh_space_size() const;
  inline void clear_ymmh_space();
  static const int kYmmhSpaceFieldNumber = 2;
  inline ::google::protobuf::uint32 ymmh_space(int index) const;
  inline void set_ymmh_space(int index, ::google::protobuf::uint32 value);
  inline void add_ymmh_space(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ymmh_space() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ymmh_space();

  // @@protoc_insertion_point(class_scope:user_x86_xsave_entry)
 private:
  inline void set_has_xstate_bv();
  inline void clear_has_xstate_bv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 xstate_bv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ymmh_space_;
  friend void  protobuf_AddDesc_core_2dx86_2eproto();
  friend void protobuf_AssignDesc_core_2dx86_2eproto();
  friend void protobuf_ShutdownFile_core_2dx86_2eproto();

  void InitAsDefaultInstance();
  static user_x86_xsave_entry* default_instance_;
};
// -------------------------------------------------------------------

class user_x86_fpregs_entry : public ::google::protobuf::Message {
 public:
  user_x86_fpregs_entry();
  virtual ~user_x86_fpregs_entry();

  user_x86_fpregs_entry(const user_x86_fpregs_entry& from);

  inline user_x86_fpregs_entry& operator=(const user_x86_fpregs_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_x86_fpregs_entry& default_instance();

  void Swap(user_x86_fpregs_entry* other);

  // implements Message ----------------------------------------------

  user_x86_fpregs_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_x86_fpregs_entry& from);
  void MergeFrom(const user_x86_fpregs_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cwd = 1;
  inline bool has_cwd() const;
  inline void clear_cwd();
  static const int kCwdFieldNumber = 1;
  inline ::google::protobuf::uint32 cwd() const;
  inline void set_cwd(::google::protobuf::uint32 value);

  // required uint32 swd = 2;
  inline bool has_swd() const;
  inline void clear_swd();
  static const int kSwdFieldNumber = 2;
  inline ::google::protobuf::uint32 swd() const;
  inline void set_swd(::google::protobuf::uint32 value);

  // required uint32 twd = 3;
  inline bool has_twd() const;
  inline void clear_twd();
  static const int kTwdFieldNumber = 3;
  inline ::google::protobuf::uint32 twd() const;
  inline void set_twd(::google::protobuf::uint32 value);

  // required uint32 fop = 4;
  inline bool has_fop() const;
  inline void clear_fop();
  static const int kFopFieldNumber = 4;
  inline ::google::protobuf::uint32 fop() const;
  inline void set_fop(::google::protobuf::uint32 value);

  // required uint64 rip = 5;
  inline bool has_rip() const;
  inline void clear_rip();
  static const int kRipFieldNumber = 5;
  inline ::google::protobuf::uint64 rip() const;
  inline void set_rip(::google::protobuf::uint64 value);

  // required uint64 rdp = 6;
  inline bool has_rdp() const;
  inline void clear_rdp();
  static const int kRdpFieldNumber = 6;
  inline ::google::protobuf::uint64 rdp() const;
  inline void set_rdp(::google::protobuf::uint64 value);

  // required uint32 mxcsr = 7;
  inline bool has_mxcsr() const;
  inline void clear_mxcsr();
  static const int kMxcsrFieldNumber = 7;
  inline ::google::protobuf::uint32 mxcsr() const;
  inline void set_mxcsr(::google::protobuf::uint32 value);

  // required uint32 mxcsr_mask = 8;
  inline bool has_mxcsr_mask() const;
  inline void clear_mxcsr_mask();
  static const int kMxcsrMaskFieldNumber = 8;
  inline ::google::protobuf::uint32 mxcsr_mask() const;
  inline void set_mxcsr_mask(::google::protobuf::uint32 value);

  // repeated uint32 st_space = 9;
  inline int st_space_size() const;
  inline void clear_st_space();
  static const int kStSpaceFieldNumber = 9;
  inline ::google::protobuf::uint32 st_space(int index) const;
  inline void set_st_space(int index, ::google::protobuf::uint32 value);
  inline void add_st_space(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      st_space() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_st_space();

  // repeated uint32 xmm_space = 10;
  inline int xmm_space_size() const;
  inline void clear_xmm_space();
  static const int kXmmSpaceFieldNumber = 10;
  inline ::google::protobuf::uint32 xmm_space(int index) const;
  inline void set_xmm_space(int index, ::google::protobuf::uint32 value);
  inline void add_xmm_space(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      xmm_space() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_xmm_space();

  // repeated uint32 padding = 11;
  inline int padding_size() const;
  inline void clear_padding();
  static const int kPaddingFieldNumber = 11;
  inline ::google::protobuf::uint32 padding(int index) const;
  inline void set_padding(int index, ::google::protobuf::uint32 value);
  inline void add_padding(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      padding() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_padding();

  // optional .user_x86_xsave_entry xsave = 13;
  inline bool has_xsave() const;
  inline void clear_xsave();
  static const int kXsaveFieldNumber = 13;
  inline const ::user_x86_xsave_entry& xsave() const;
  inline ::user_x86_xsave_entry* mutable_xsave();
  inline ::user_x86_xsave_entry* release_xsave();
  inline void set_allocated_xsave(::user_x86_xsave_entry* xsave);

  // @@protoc_insertion_point(class_scope:user_x86_fpregs_entry)
 private:
  inline void set_has_cwd();
  inline void clear_has_cwd();
  inline void set_has_swd();
  inline void clear_has_swd();
  inline void set_has_twd();
  inline void clear_has_twd();
  inline void set_has_fop();
  inline void clear_has_fop();
  inline void set_has_rip();
  inline void clear_has_rip();
  inline void set_has_rdp();
  inline void clear_has_rdp();
  inline void set_has_mxcsr();
  inline void clear_has_mxcsr();
  inline void set_has_mxcsr_mask();
  inline void clear_has_mxcsr_mask();
  inline void set_has_xsave();
  inline void clear_has_xsave();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cwd_;
  ::google::protobuf::uint32 swd_;
  ::google::protobuf::uint32 twd_;
  ::google::protobuf::uint32 fop_;
  ::google::protobuf::uint64 rip_;
  ::google::protobuf::uint64 rdp_;
  ::google::protobuf::uint32 mxcsr_;
  ::google::protobuf::uint32 mxcsr_mask_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > st_space_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > xmm_space_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > padding_;
  ::user_x86_xsave_entry* xsave_;
  friend void  protobuf_AddDesc_core_2dx86_2eproto();
  friend void protobuf_AssignDesc_core_2dx86_2eproto();
  friend void protobuf_ShutdownFile_core_2dx86_2eproto();

  void InitAsDefaultInstance();
  static user_x86_fpregs_entry* default_instance_;
};
// -------------------------------------------------------------------

class user_desc_t : public ::google::protobuf::Message {
 public:
  user_desc_t();
  virtual ~user_desc_t();

  user_desc_t(const user_desc_t& from);

  inline user_desc_t& operator=(const user_desc_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_desc_t& default_instance();

  void Swap(user_desc_t* other);

  // implements Message ----------------------------------------------

  user_desc_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_desc_t& from);
  void MergeFrom(const user_desc_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 entry_number = 1;
  inline bool has_entry_number() const;
  inline void clear_entry_number();
  static const int kEntryNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 entry_number() const;
  inline void set_entry_number(::google::protobuf::uint32 value);

  // required uint32 base_addr = 2;
  inline bool has_base_addr() const;
  inline void clear_base_addr();
  static const int kBaseAddrFieldNumber = 2;
  inline ::google::protobuf::uint32 base_addr() const;
  inline void set_base_addr(::google::protobuf::uint32 value);

  // required uint32 limit = 3;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 3;
  inline ::google::protobuf::uint32 limit() const;
  inline void set_limit(::google::protobuf::uint32 value);

  // required bool seg_32bit = 4;
  inline bool has_seg_32bit() const;
  inline void clear_seg_32bit();
  static const int kSeg32BitFieldNumber = 4;
  inline bool seg_32bit() const;
  inline void set_seg_32bit(bool value);

  // required bool contents_h = 5;
  inline bool has_contents_h() const;
  inline void clear_contents_h();
  static const int kContentsHFieldNumber = 5;
  inline bool contents_h() const;
  inline void set_contents_h(bool value);

  // required bool contents_l = 6;
  inline bool has_contents_l() const;
  inline void clear_contents_l();
  static const int kContentsLFieldNumber = 6;
  inline bool contents_l() const;
  inline void set_contents_l(bool value);

  // required bool read_exec_only = 7 [default = true];
  inline bool has_read_exec_only() const;
  inline void clear_read_exec_only();
  static const int kReadExecOnlyFieldNumber = 7;
  inline bool read_exec_only() const;
  inline void set_read_exec_only(bool value);

  // required bool limit_in_pages = 8;
  inline bool has_limit_in_pages() const;
  inline void clear_limit_in_pages();
  static const int kLimitInPagesFieldNumber = 8;
  inline bool limit_in_pages() const;
  inline void set_limit_in_pages(bool value);

  // required bool seg_not_present = 9 [default = true];
  inline bool has_seg_not_present() const;
  inline void clear_seg_not_present();
  static const int kSegNotPresentFieldNumber = 9;
  inline bool seg_not_present() const;
  inline void set_seg_not_present(bool value);

  // required bool useable = 10;
  inline bool has_useable() const;
  inline void clear_useable();
  static const int kUseableFieldNumber = 10;
  inline bool useable() const;
  inline void set_useable(bool value);

  // @@protoc_insertion_point(class_scope:user_desc_t)
 private:
  inline void set_has_entry_number();
  inline void clear_has_entry_number();
  inline void set_has_base_addr();
  inline void clear_has_base_addr();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_seg_32bit();
  inline void clear_has_seg_32bit();
  inline void set_has_contents_h();
  inline void clear_has_contents_h();
  inline void set_has_contents_l();
  inline void clear_has_contents_l();
  inline void set_has_read_exec_only();
  inline void clear_has_read_exec_only();
  inline void set_has_limit_in_pages();
  inline void clear_has_limit_in_pages();
  inline void set_has_seg_not_present();
  inline void clear_has_seg_not_present();
  inline void set_has_useable();
  inline void clear_has_useable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 entry_number_;
  ::google::protobuf::uint32 base_addr_;
  ::google::protobuf::uint32 limit_;
  bool seg_32bit_;
  bool contents_h_;
  bool contents_l_;
  bool read_exec_only_;
  bool limit_in_pages_;
  bool seg_not_present_;
  bool useable_;
  friend void  protobuf_AddDesc_core_2dx86_2eproto();
  friend void protobuf_AssignDesc_core_2dx86_2eproto();
  friend void protobuf_ShutdownFile_core_2dx86_2eproto();

  void InitAsDefaultInstance();
  static user_desc_t* default_instance_;
};
// -------------------------------------------------------------------

class thread_info_x86 : public ::google::protobuf::Message {
 public:
  thread_info_x86();
  virtual ~thread_info_x86();

  thread_info_x86(const thread_info_x86& from);

  inline thread_info_x86& operator=(const thread_info_x86& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const thread_info_x86& default_instance();

  void Swap(thread_info_x86* other);

  // implements Message ----------------------------------------------

  thread_info_x86* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const thread_info_x86& from);
  void MergeFrom(const thread_info_x86& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 clear_tid_addr = 1;
  inline bool has_clear_tid_addr() const;
  inline void clear_clear_tid_addr();
  static const int kClearTidAddrFieldNumber = 1;
  inline ::google::protobuf::uint64 clear_tid_addr() const;
  inline void set_clear_tid_addr(::google::protobuf::uint64 value);

  // required .user_x86_regs_entry gpregs = 2;
  inline bool has_gpregs() const;
  inline void clear_gpregs();
  static const int kGpregsFieldNumber = 2;
  inline const ::user_x86_regs_entry& gpregs() const;
  inline ::user_x86_regs_entry* mutable_gpregs();
  inline ::user_x86_regs_entry* release_gpregs();
  inline void set_allocated_gpregs(::user_x86_regs_entry* gpregs);

  // required .user_x86_fpregs_entry fpregs = 3;
  inline bool has_fpregs() const;
  inline void clear_fpregs();
  static const int kFpregsFieldNumber = 3;
  inline const ::user_x86_fpregs_entry& fpregs() const;
  inline ::user_x86_fpregs_entry* mutable_fpregs();
  inline ::user_x86_fpregs_entry* release_fpregs();
  inline void set_allocated_fpregs(::user_x86_fpregs_entry* fpregs);

  // repeated .user_desc_t tls = 4;
  inline int tls_size() const;
  inline void clear_tls();
  static const int kTlsFieldNumber = 4;
  inline const ::user_desc_t& tls(int index) const;
  inline ::user_desc_t* mutable_tls(int index);
  inline ::user_desc_t* add_tls();
  inline const ::google::protobuf::RepeatedPtrField< ::user_desc_t >&
      tls() const;
  inline ::google::protobuf::RepeatedPtrField< ::user_desc_t >*
      mutable_tls();

  // @@protoc_insertion_point(class_scope:thread_info_x86)
 private:
  inline void set_has_clear_tid_addr();
  inline void clear_has_clear_tid_addr();
  inline void set_has_gpregs();
  inline void clear_has_gpregs();
  inline void set_has_fpregs();
  inline void clear_has_fpregs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 clear_tid_addr_;
  ::user_x86_regs_entry* gpregs_;
  ::user_x86_fpregs_entry* fpregs_;
  ::google::protobuf::RepeatedPtrField< ::user_desc_t > tls_;
  friend void  protobuf_AddDesc_core_2dx86_2eproto();
  friend void protobuf_AssignDesc_core_2dx86_2eproto();
  friend void protobuf_ShutdownFile_core_2dx86_2eproto();

  void InitAsDefaultInstance();
  static thread_info_x86* default_instance_;
};
// ===================================================================


// ===================================================================

// user_x86_regs_entry

// required uint64 r15 = 1;
inline bool user_x86_regs_entry::has_r15() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_x86_regs_entry::set_has_r15() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_x86_regs_entry::clear_has_r15() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_x86_regs_entry::clear_r15() {
  r15_ = GOOGLE_ULONGLONG(0);
  clear_has_r15();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::r15() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.r15)
  return r15_;
}
inline void user_x86_regs_entry::set_r15(::google::protobuf::uint64 value) {
  set_has_r15();
  r15_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.r15)
}

// required uint64 r14 = 2;
inline bool user_x86_regs_entry::has_r14() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_x86_regs_entry::set_has_r14() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_x86_regs_entry::clear_has_r14() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_x86_regs_entry::clear_r14() {
  r14_ = GOOGLE_ULONGLONG(0);
  clear_has_r14();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::r14() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.r14)
  return r14_;
}
inline void user_x86_regs_entry::set_r14(::google::protobuf::uint64 value) {
  set_has_r14();
  r14_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.r14)
}

// required uint64 r13 = 3;
inline bool user_x86_regs_entry::has_r13() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_x86_regs_entry::set_has_r13() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_x86_regs_entry::clear_has_r13() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_x86_regs_entry::clear_r13() {
  r13_ = GOOGLE_ULONGLONG(0);
  clear_has_r13();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::r13() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.r13)
  return r13_;
}
inline void user_x86_regs_entry::set_r13(::google::protobuf::uint64 value) {
  set_has_r13();
  r13_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.r13)
}

// required uint64 r12 = 4;
inline bool user_x86_regs_entry::has_r12() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_x86_regs_entry::set_has_r12() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_x86_regs_entry::clear_has_r12() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_x86_regs_entry::clear_r12() {
  r12_ = GOOGLE_ULONGLONG(0);
  clear_has_r12();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::r12() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.r12)
  return r12_;
}
inline void user_x86_regs_entry::set_r12(::google::protobuf::uint64 value) {
  set_has_r12();
  r12_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.r12)
}

// required uint64 bp = 5;
inline bool user_x86_regs_entry::has_bp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_x86_regs_entry::set_has_bp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_x86_regs_entry::clear_has_bp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_x86_regs_entry::clear_bp() {
  bp_ = GOOGLE_ULONGLONG(0);
  clear_has_bp();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::bp() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.bp)
  return bp_;
}
inline void user_x86_regs_entry::set_bp(::google::protobuf::uint64 value) {
  set_has_bp();
  bp_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.bp)
}

// required uint64 bx = 6;
inline bool user_x86_regs_entry::has_bx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void user_x86_regs_entry::set_has_bx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void user_x86_regs_entry::clear_has_bx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void user_x86_regs_entry::clear_bx() {
  bx_ = GOOGLE_ULONGLONG(0);
  clear_has_bx();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::bx() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.bx)
  return bx_;
}
inline void user_x86_regs_entry::set_bx(::google::protobuf::uint64 value) {
  set_has_bx();
  bx_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.bx)
}

// required uint64 r11 = 7;
inline bool user_x86_regs_entry::has_r11() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void user_x86_regs_entry::set_has_r11() {
  _has_bits_[0] |= 0x00000040u;
}
inline void user_x86_regs_entry::clear_has_r11() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void user_x86_regs_entry::clear_r11() {
  r11_ = GOOGLE_ULONGLONG(0);
  clear_has_r11();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::r11() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.r11)
  return r11_;
}
inline void user_x86_regs_entry::set_r11(::google::protobuf::uint64 value) {
  set_has_r11();
  r11_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.r11)
}

// required uint64 r10 = 8;
inline bool user_x86_regs_entry::has_r10() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void user_x86_regs_entry::set_has_r10() {
  _has_bits_[0] |= 0x00000080u;
}
inline void user_x86_regs_entry::clear_has_r10() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void user_x86_regs_entry::clear_r10() {
  r10_ = GOOGLE_ULONGLONG(0);
  clear_has_r10();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::r10() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.r10)
  return r10_;
}
inline void user_x86_regs_entry::set_r10(::google::protobuf::uint64 value) {
  set_has_r10();
  r10_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.r10)
}

// required uint64 r9 = 9;
inline bool user_x86_regs_entry::has_r9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void user_x86_regs_entry::set_has_r9() {
  _has_bits_[0] |= 0x00000100u;
}
inline void user_x86_regs_entry::clear_has_r9() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void user_x86_regs_entry::clear_r9() {
  r9_ = GOOGLE_ULONGLONG(0);
  clear_has_r9();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::r9() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.r9)
  return r9_;
}
inline void user_x86_regs_entry::set_r9(::google::protobuf::uint64 value) {
  set_has_r9();
  r9_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.r9)
}

// required uint64 r8 = 10;
inline bool user_x86_regs_entry::has_r8() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void user_x86_regs_entry::set_has_r8() {
  _has_bits_[0] |= 0x00000200u;
}
inline void user_x86_regs_entry::clear_has_r8() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void user_x86_regs_entry::clear_r8() {
  r8_ = GOOGLE_ULONGLONG(0);
  clear_has_r8();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::r8() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.r8)
  return r8_;
}
inline void user_x86_regs_entry::set_r8(::google::protobuf::uint64 value) {
  set_has_r8();
  r8_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.r8)
}

// required uint64 ax = 11;
inline bool user_x86_regs_entry::has_ax() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void user_x86_regs_entry::set_has_ax() {
  _has_bits_[0] |= 0x00000400u;
}
inline void user_x86_regs_entry::clear_has_ax() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void user_x86_regs_entry::clear_ax() {
  ax_ = GOOGLE_ULONGLONG(0);
  clear_has_ax();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::ax() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.ax)
  return ax_;
}
inline void user_x86_regs_entry::set_ax(::google::protobuf::uint64 value) {
  set_has_ax();
  ax_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.ax)
}

// required uint64 cx = 12;
inline bool user_x86_regs_entry::has_cx() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void user_x86_regs_entry::set_has_cx() {
  _has_bits_[0] |= 0x00000800u;
}
inline void user_x86_regs_entry::clear_has_cx() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void user_x86_regs_entry::clear_cx() {
  cx_ = GOOGLE_ULONGLONG(0);
  clear_has_cx();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::cx() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.cx)
  return cx_;
}
inline void user_x86_regs_entry::set_cx(::google::protobuf::uint64 value) {
  set_has_cx();
  cx_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.cx)
}

// required uint64 dx = 13;
inline bool user_x86_regs_entry::has_dx() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void user_x86_regs_entry::set_has_dx() {
  _has_bits_[0] |= 0x00001000u;
}
inline void user_x86_regs_entry::clear_has_dx() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void user_x86_regs_entry::clear_dx() {
  dx_ = GOOGLE_ULONGLONG(0);
  clear_has_dx();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::dx() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.dx)
  return dx_;
}
inline void user_x86_regs_entry::set_dx(::google::protobuf::uint64 value) {
  set_has_dx();
  dx_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.dx)
}

// required uint64 si = 14;
inline bool user_x86_regs_entry::has_si() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void user_x86_regs_entry::set_has_si() {
  _has_bits_[0] |= 0x00002000u;
}
inline void user_x86_regs_entry::clear_has_si() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void user_x86_regs_entry::clear_si() {
  si_ = GOOGLE_ULONGLONG(0);
  clear_has_si();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::si() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.si)
  return si_;
}
inline void user_x86_regs_entry::set_si(::google::protobuf::uint64 value) {
  set_has_si();
  si_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.si)
}

// required uint64 di = 15;
inline bool user_x86_regs_entry::has_di() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void user_x86_regs_entry::set_has_di() {
  _has_bits_[0] |= 0x00004000u;
}
inline void user_x86_regs_entry::clear_has_di() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void user_x86_regs_entry::clear_di() {
  di_ = GOOGLE_ULONGLONG(0);
  clear_has_di();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::di() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.di)
  return di_;
}
inline void user_x86_regs_entry::set_di(::google::protobuf::uint64 value) {
  set_has_di();
  di_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.di)
}

// required uint64 orig_ax = 16;
inline bool user_x86_regs_entry::has_orig_ax() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void user_x86_regs_entry::set_has_orig_ax() {
  _has_bits_[0] |= 0x00008000u;
}
inline void user_x86_regs_entry::clear_has_orig_ax() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void user_x86_regs_entry::clear_orig_ax() {
  orig_ax_ = GOOGLE_ULONGLONG(0);
  clear_has_orig_ax();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::orig_ax() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.orig_ax)
  return orig_ax_;
}
inline void user_x86_regs_entry::set_orig_ax(::google::protobuf::uint64 value) {
  set_has_orig_ax();
  orig_ax_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.orig_ax)
}

// required uint64 ip = 17;
inline bool user_x86_regs_entry::has_ip() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void user_x86_regs_entry::set_has_ip() {
  _has_bits_[0] |= 0x00010000u;
}
inline void user_x86_regs_entry::clear_has_ip() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void user_x86_regs_entry::clear_ip() {
  ip_ = GOOGLE_ULONGLONG(0);
  clear_has_ip();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::ip() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.ip)
  return ip_;
}
inline void user_x86_regs_entry::set_ip(::google::protobuf::uint64 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.ip)
}

// required uint64 cs = 18;
inline bool user_x86_regs_entry::has_cs() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void user_x86_regs_entry::set_has_cs() {
  _has_bits_[0] |= 0x00020000u;
}
inline void user_x86_regs_entry::clear_has_cs() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void user_x86_regs_entry::clear_cs() {
  cs_ = GOOGLE_ULONGLONG(0);
  clear_has_cs();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::cs() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.cs)
  return cs_;
}
inline void user_x86_regs_entry::set_cs(::google::protobuf::uint64 value) {
  set_has_cs();
  cs_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.cs)
}

// required uint64 flags = 19;
inline bool user_x86_regs_entry::has_flags() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void user_x86_regs_entry::set_has_flags() {
  _has_bits_[0] |= 0x00040000u;
}
inline void user_x86_regs_entry::clear_has_flags() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void user_x86_regs_entry::clear_flags() {
  flags_ = GOOGLE_ULONGLONG(0);
  clear_has_flags();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::flags() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.flags)
  return flags_;
}
inline void user_x86_regs_entry::set_flags(::google::protobuf::uint64 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.flags)
}

// required uint64 sp = 20;
inline bool user_x86_regs_entry::has_sp() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void user_x86_regs_entry::set_has_sp() {
  _has_bits_[0] |= 0x00080000u;
}
inline void user_x86_regs_entry::clear_has_sp() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void user_x86_regs_entry::clear_sp() {
  sp_ = GOOGLE_ULONGLONG(0);
  clear_has_sp();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::sp() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.sp)
  return sp_;
}
inline void user_x86_regs_entry::set_sp(::google::protobuf::uint64 value) {
  set_has_sp();
  sp_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.sp)
}

// required uint64 ss = 21;
inline bool user_x86_regs_entry::has_ss() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void user_x86_regs_entry::set_has_ss() {
  _has_bits_[0] |= 0x00100000u;
}
inline void user_x86_regs_entry::clear_has_ss() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void user_x86_regs_entry::clear_ss() {
  ss_ = GOOGLE_ULONGLONG(0);
  clear_has_ss();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::ss() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.ss)
  return ss_;
}
inline void user_x86_regs_entry::set_ss(::google::protobuf::uint64 value) {
  set_has_ss();
  ss_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.ss)
}

// required uint64 fs_base = 22;
inline bool user_x86_regs_entry::has_fs_base() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void user_x86_regs_entry::set_has_fs_base() {
  _has_bits_[0] |= 0x00200000u;
}
inline void user_x86_regs_entry::clear_has_fs_base() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void user_x86_regs_entry::clear_fs_base() {
  fs_base_ = GOOGLE_ULONGLONG(0);
  clear_has_fs_base();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::fs_base() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.fs_base)
  return fs_base_;
}
inline void user_x86_regs_entry::set_fs_base(::google::protobuf::uint64 value) {
  set_has_fs_base();
  fs_base_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.fs_base)
}

// required uint64 gs_base = 23;
inline bool user_x86_regs_entry::has_gs_base() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void user_x86_regs_entry::set_has_gs_base() {
  _has_bits_[0] |= 0x00400000u;
}
inline void user_x86_regs_entry::clear_has_gs_base() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void user_x86_regs_entry::clear_gs_base() {
  gs_base_ = GOOGLE_ULONGLONG(0);
  clear_has_gs_base();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::gs_base() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.gs_base)
  return gs_base_;
}
inline void user_x86_regs_entry::set_gs_base(::google::protobuf::uint64 value) {
  set_has_gs_base();
  gs_base_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.gs_base)
}

// required uint64 ds = 24;
inline bool user_x86_regs_entry::has_ds() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void user_x86_regs_entry::set_has_ds() {
  _has_bits_[0] |= 0x00800000u;
}
inline void user_x86_regs_entry::clear_has_ds() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void user_x86_regs_entry::clear_ds() {
  ds_ = GOOGLE_ULONGLONG(0);
  clear_has_ds();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::ds() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.ds)
  return ds_;
}
inline void user_x86_regs_entry::set_ds(::google::protobuf::uint64 value) {
  set_has_ds();
  ds_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.ds)
}

// required uint64 es = 25;
inline bool user_x86_regs_entry::has_es() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void user_x86_regs_entry::set_has_es() {
  _has_bits_[0] |= 0x01000000u;
}
inline void user_x86_regs_entry::clear_has_es() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void user_x86_regs_entry::clear_es() {
  es_ = GOOGLE_ULONGLONG(0);
  clear_has_es();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::es() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.es)
  return es_;
}
inline void user_x86_regs_entry::set_es(::google::protobuf::uint64 value) {
  set_has_es();
  es_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.es)
}

// required uint64 fs = 26;
inline bool user_x86_regs_entry::has_fs() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void user_x86_regs_entry::set_has_fs() {
  _has_bits_[0] |= 0x02000000u;
}
inline void user_x86_regs_entry::clear_has_fs() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void user_x86_regs_entry::clear_fs() {
  fs_ = GOOGLE_ULONGLONG(0);
  clear_has_fs();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::fs() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.fs)
  return fs_;
}
inline void user_x86_regs_entry::set_fs(::google::protobuf::uint64 value) {
  set_has_fs();
  fs_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.fs)
}

// required uint64 gs = 27;
inline bool user_x86_regs_entry::has_gs() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void user_x86_regs_entry::set_has_gs() {
  _has_bits_[0] |= 0x04000000u;
}
inline void user_x86_regs_entry::clear_has_gs() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void user_x86_regs_entry::clear_gs() {
  gs_ = GOOGLE_ULONGLONG(0);
  clear_has_gs();
}
inline ::google::protobuf::uint64 user_x86_regs_entry::gs() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.gs)
  return gs_;
}
inline void user_x86_regs_entry::set_gs(::google::protobuf::uint64 value) {
  set_has_gs();
  gs_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.gs)
}

// optional .user_x86_regs_mode mode = 28 [default = NATIVE];
inline bool user_x86_regs_entry::has_mode() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void user_x86_regs_entry::set_has_mode() {
  _has_bits_[0] |= 0x08000000u;
}
inline void user_x86_regs_entry::clear_has_mode() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void user_x86_regs_entry::clear_mode() {
  mode_ = 1;
  clear_has_mode();
}
inline ::user_x86_regs_mode user_x86_regs_entry::mode() const {
  // @@protoc_insertion_point(field_get:user_x86_regs_entry.mode)
  return static_cast< ::user_x86_regs_mode >(mode_);
}
inline void user_x86_regs_entry::set_mode(::user_x86_regs_mode value) {
  assert(::user_x86_regs_mode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:user_x86_regs_entry.mode)
}

// -------------------------------------------------------------------

// user_x86_xsave_entry

// required uint64 xstate_bv = 1;
inline bool user_x86_xsave_entry::has_xstate_bv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_x86_xsave_entry::set_has_xstate_bv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_x86_xsave_entry::clear_has_xstate_bv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_x86_xsave_entry::clear_xstate_bv() {
  xstate_bv_ = GOOGLE_ULONGLONG(0);
  clear_has_xstate_bv();
}
inline ::google::protobuf::uint64 user_x86_xsave_entry::xstate_bv() const {
  // @@protoc_insertion_point(field_get:user_x86_xsave_entry.xstate_bv)
  return xstate_bv_;
}
inline void user_x86_xsave_entry::set_xstate_bv(::google::protobuf::uint64 value) {
  set_has_xstate_bv();
  xstate_bv_ = value;
  // @@protoc_insertion_point(field_set:user_x86_xsave_entry.xstate_bv)
}

// repeated uint32 ymmh_space = 2;
inline int user_x86_xsave_entry::ymmh_space_size() const {
  return ymmh_space_.size();
}
inline void user_x86_xsave_entry::clear_ymmh_space() {
  ymmh_space_.Clear();
}
inline ::google::protobuf::uint32 user_x86_xsave_entry::ymmh_space(int index) const {
  // @@protoc_insertion_point(field_get:user_x86_xsave_entry.ymmh_space)
  return ymmh_space_.Get(index);
}
inline void user_x86_xsave_entry::set_ymmh_space(int index, ::google::protobuf::uint32 value) {
  ymmh_space_.Set(index, value);
  // @@protoc_insertion_point(field_set:user_x86_xsave_entry.ymmh_space)
}
inline void user_x86_xsave_entry::add_ymmh_space(::google::protobuf::uint32 value) {
  ymmh_space_.Add(value);
  // @@protoc_insertion_point(field_add:user_x86_xsave_entry.ymmh_space)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user_x86_xsave_entry::ymmh_space() const {
  // @@protoc_insertion_point(field_list:user_x86_xsave_entry.ymmh_space)
  return ymmh_space_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user_x86_xsave_entry::mutable_ymmh_space() {
  // @@protoc_insertion_point(field_mutable_list:user_x86_xsave_entry.ymmh_space)
  return &ymmh_space_;
}

// -------------------------------------------------------------------

// user_x86_fpregs_entry

// required uint32 cwd = 1;
inline bool user_x86_fpregs_entry::has_cwd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_x86_fpregs_entry::set_has_cwd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_x86_fpregs_entry::clear_has_cwd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_x86_fpregs_entry::clear_cwd() {
  cwd_ = 0u;
  clear_has_cwd();
}
inline ::google::protobuf::uint32 user_x86_fpregs_entry::cwd() const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.cwd)
  return cwd_;
}
inline void user_x86_fpregs_entry::set_cwd(::google::protobuf::uint32 value) {
  set_has_cwd();
  cwd_ = value;
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.cwd)
}

// required uint32 swd = 2;
inline bool user_x86_fpregs_entry::has_swd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_x86_fpregs_entry::set_has_swd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_x86_fpregs_entry::clear_has_swd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_x86_fpregs_entry::clear_swd() {
  swd_ = 0u;
  clear_has_swd();
}
inline ::google::protobuf::uint32 user_x86_fpregs_entry::swd() const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.swd)
  return swd_;
}
inline void user_x86_fpregs_entry::set_swd(::google::protobuf::uint32 value) {
  set_has_swd();
  swd_ = value;
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.swd)
}

// required uint32 twd = 3;
inline bool user_x86_fpregs_entry::has_twd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_x86_fpregs_entry::set_has_twd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_x86_fpregs_entry::clear_has_twd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_x86_fpregs_entry::clear_twd() {
  twd_ = 0u;
  clear_has_twd();
}
inline ::google::protobuf::uint32 user_x86_fpregs_entry::twd() const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.twd)
  return twd_;
}
inline void user_x86_fpregs_entry::set_twd(::google::protobuf::uint32 value) {
  set_has_twd();
  twd_ = value;
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.twd)
}

// required uint32 fop = 4;
inline bool user_x86_fpregs_entry::has_fop() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_x86_fpregs_entry::set_has_fop() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_x86_fpregs_entry::clear_has_fop() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_x86_fpregs_entry::clear_fop() {
  fop_ = 0u;
  clear_has_fop();
}
inline ::google::protobuf::uint32 user_x86_fpregs_entry::fop() const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.fop)
  return fop_;
}
inline void user_x86_fpregs_entry::set_fop(::google::protobuf::uint32 value) {
  set_has_fop();
  fop_ = value;
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.fop)
}

// required uint64 rip = 5;
inline bool user_x86_fpregs_entry::has_rip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_x86_fpregs_entry::set_has_rip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_x86_fpregs_entry::clear_has_rip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_x86_fpregs_entry::clear_rip() {
  rip_ = GOOGLE_ULONGLONG(0);
  clear_has_rip();
}
inline ::google::protobuf::uint64 user_x86_fpregs_entry::rip() const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.rip)
  return rip_;
}
inline void user_x86_fpregs_entry::set_rip(::google::protobuf::uint64 value) {
  set_has_rip();
  rip_ = value;
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.rip)
}

// required uint64 rdp = 6;
inline bool user_x86_fpregs_entry::has_rdp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void user_x86_fpregs_entry::set_has_rdp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void user_x86_fpregs_entry::clear_has_rdp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void user_x86_fpregs_entry::clear_rdp() {
  rdp_ = GOOGLE_ULONGLONG(0);
  clear_has_rdp();
}
inline ::google::protobuf::uint64 user_x86_fpregs_entry::rdp() const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.rdp)
  return rdp_;
}
inline void user_x86_fpregs_entry::set_rdp(::google::protobuf::uint64 value) {
  set_has_rdp();
  rdp_ = value;
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.rdp)
}

// required uint32 mxcsr = 7;
inline bool user_x86_fpregs_entry::has_mxcsr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void user_x86_fpregs_entry::set_has_mxcsr() {
  _has_bits_[0] |= 0x00000040u;
}
inline void user_x86_fpregs_entry::clear_has_mxcsr() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void user_x86_fpregs_entry::clear_mxcsr() {
  mxcsr_ = 0u;
  clear_has_mxcsr();
}
inline ::google::protobuf::uint32 user_x86_fpregs_entry::mxcsr() const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.mxcsr)
  return mxcsr_;
}
inline void user_x86_fpregs_entry::set_mxcsr(::google::protobuf::uint32 value) {
  set_has_mxcsr();
  mxcsr_ = value;
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.mxcsr)
}

// required uint32 mxcsr_mask = 8;
inline bool user_x86_fpregs_entry::has_mxcsr_mask() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void user_x86_fpregs_entry::set_has_mxcsr_mask() {
  _has_bits_[0] |= 0x00000080u;
}
inline void user_x86_fpregs_entry::clear_has_mxcsr_mask() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void user_x86_fpregs_entry::clear_mxcsr_mask() {
  mxcsr_mask_ = 0u;
  clear_has_mxcsr_mask();
}
inline ::google::protobuf::uint32 user_x86_fpregs_entry::mxcsr_mask() const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.mxcsr_mask)
  return mxcsr_mask_;
}
inline void user_x86_fpregs_entry::set_mxcsr_mask(::google::protobuf::uint32 value) {
  set_has_mxcsr_mask();
  mxcsr_mask_ = value;
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.mxcsr_mask)
}

// repeated uint32 st_space = 9;
inline int user_x86_fpregs_entry::st_space_size() const {
  return st_space_.size();
}
inline void user_x86_fpregs_entry::clear_st_space() {
  st_space_.Clear();
}
inline ::google::protobuf::uint32 user_x86_fpregs_entry::st_space(int index) const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.st_space)
  return st_space_.Get(index);
}
inline void user_x86_fpregs_entry::set_st_space(int index, ::google::protobuf::uint32 value) {
  st_space_.Set(index, value);
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.st_space)
}
inline void user_x86_fpregs_entry::add_st_space(::google::protobuf::uint32 value) {
  st_space_.Add(value);
  // @@protoc_insertion_point(field_add:user_x86_fpregs_entry.st_space)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user_x86_fpregs_entry::st_space() const {
  // @@protoc_insertion_point(field_list:user_x86_fpregs_entry.st_space)
  return st_space_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user_x86_fpregs_entry::mutable_st_space() {
  // @@protoc_insertion_point(field_mutable_list:user_x86_fpregs_entry.st_space)
  return &st_space_;
}

// repeated uint32 xmm_space = 10;
inline int user_x86_fpregs_entry::xmm_space_size() const {
  return xmm_space_.size();
}
inline void user_x86_fpregs_entry::clear_xmm_space() {
  xmm_space_.Clear();
}
inline ::google::protobuf::uint32 user_x86_fpregs_entry::xmm_space(int index) const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.xmm_space)
  return xmm_space_.Get(index);
}
inline void user_x86_fpregs_entry::set_xmm_space(int index, ::google::protobuf::uint32 value) {
  xmm_space_.Set(index, value);
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.xmm_space)
}
inline void user_x86_fpregs_entry::add_xmm_space(::google::protobuf::uint32 value) {
  xmm_space_.Add(value);
  // @@protoc_insertion_point(field_add:user_x86_fpregs_entry.xmm_space)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user_x86_fpregs_entry::xmm_space() const {
  // @@protoc_insertion_point(field_list:user_x86_fpregs_entry.xmm_space)
  return xmm_space_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user_x86_fpregs_entry::mutable_xmm_space() {
  // @@protoc_insertion_point(field_mutable_list:user_x86_fpregs_entry.xmm_space)
  return &xmm_space_;
}

// repeated uint32 padding = 11;
inline int user_x86_fpregs_entry::padding_size() const {
  return padding_.size();
}
inline void user_x86_fpregs_entry::clear_padding() {
  padding_.Clear();
}
inline ::google::protobuf::uint32 user_x86_fpregs_entry::padding(int index) const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.padding)
  return padding_.Get(index);
}
inline void user_x86_fpregs_entry::set_padding(int index, ::google::protobuf::uint32 value) {
  padding_.Set(index, value);
  // @@protoc_insertion_point(field_set:user_x86_fpregs_entry.padding)
}
inline void user_x86_fpregs_entry::add_padding(::google::protobuf::uint32 value) {
  padding_.Add(value);
  // @@protoc_insertion_point(field_add:user_x86_fpregs_entry.padding)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user_x86_fpregs_entry::padding() const {
  // @@protoc_insertion_point(field_list:user_x86_fpregs_entry.padding)
  return padding_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user_x86_fpregs_entry::mutable_padding() {
  // @@protoc_insertion_point(field_mutable_list:user_x86_fpregs_entry.padding)
  return &padding_;
}

// optional .user_x86_xsave_entry xsave = 13;
inline bool user_x86_fpregs_entry::has_xsave() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void user_x86_fpregs_entry::set_has_xsave() {
  _has_bits_[0] |= 0x00000800u;
}
inline void user_x86_fpregs_entry::clear_has_xsave() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void user_x86_fpregs_entry::clear_xsave() {
  if (xsave_ != NULL) xsave_->::user_x86_xsave_entry::Clear();
  clear_has_xsave();
}
inline const ::user_x86_xsave_entry& user_x86_fpregs_entry::xsave() const {
  // @@protoc_insertion_point(field_get:user_x86_fpregs_entry.xsave)
  return xsave_ != NULL ? *xsave_ : *default_instance_->xsave_;
}
inline ::user_x86_xsave_entry* user_x86_fpregs_entry::mutable_xsave() {
  set_has_xsave();
  if (xsave_ == NULL) xsave_ = new ::user_x86_xsave_entry;
  // @@protoc_insertion_point(field_mutable:user_x86_fpregs_entry.xsave)
  return xsave_;
}
inline ::user_x86_xsave_entry* user_x86_fpregs_entry::release_xsave() {
  clear_has_xsave();
  ::user_x86_xsave_entry* temp = xsave_;
  xsave_ = NULL;
  return temp;
}
inline void user_x86_fpregs_entry::set_allocated_xsave(::user_x86_xsave_entry* xsave) {
  delete xsave_;
  xsave_ = xsave;
  if (xsave) {
    set_has_xsave();
  } else {
    clear_has_xsave();
  }
  // @@protoc_insertion_point(field_set_allocated:user_x86_fpregs_entry.xsave)
}

// -------------------------------------------------------------------

// user_desc_t

// required uint32 entry_number = 1;
inline bool user_desc_t::has_entry_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_desc_t::set_has_entry_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_desc_t::clear_has_entry_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_desc_t::clear_entry_number() {
  entry_number_ = 0u;
  clear_has_entry_number();
}
inline ::google::protobuf::uint32 user_desc_t::entry_number() const {
  // @@protoc_insertion_point(field_get:user_desc_t.entry_number)
  return entry_number_;
}
inline void user_desc_t::set_entry_number(::google::protobuf::uint32 value) {
  set_has_entry_number();
  entry_number_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.entry_number)
}

// required uint32 base_addr = 2;
inline bool user_desc_t::has_base_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_desc_t::set_has_base_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_desc_t::clear_has_base_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_desc_t::clear_base_addr() {
  base_addr_ = 0u;
  clear_has_base_addr();
}
inline ::google::protobuf::uint32 user_desc_t::base_addr() const {
  // @@protoc_insertion_point(field_get:user_desc_t.base_addr)
  return base_addr_;
}
inline void user_desc_t::set_base_addr(::google::protobuf::uint32 value) {
  set_has_base_addr();
  base_addr_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.base_addr)
}

// required uint32 limit = 3;
inline bool user_desc_t::has_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_desc_t::set_has_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_desc_t::clear_has_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_desc_t::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 user_desc_t::limit() const {
  // @@protoc_insertion_point(field_get:user_desc_t.limit)
  return limit_;
}
inline void user_desc_t::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.limit)
}

// required bool seg_32bit = 4;
inline bool user_desc_t::has_seg_32bit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_desc_t::set_has_seg_32bit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_desc_t::clear_has_seg_32bit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_desc_t::clear_seg_32bit() {
  seg_32bit_ = false;
  clear_has_seg_32bit();
}
inline bool user_desc_t::seg_32bit() const {
  // @@protoc_insertion_point(field_get:user_desc_t.seg_32bit)
  return seg_32bit_;
}
inline void user_desc_t::set_seg_32bit(bool value) {
  set_has_seg_32bit();
  seg_32bit_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.seg_32bit)
}

// required bool contents_h = 5;
inline bool user_desc_t::has_contents_h() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_desc_t::set_has_contents_h() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_desc_t::clear_has_contents_h() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_desc_t::clear_contents_h() {
  contents_h_ = false;
  clear_has_contents_h();
}
inline bool user_desc_t::contents_h() const {
  // @@protoc_insertion_point(field_get:user_desc_t.contents_h)
  return contents_h_;
}
inline void user_desc_t::set_contents_h(bool value) {
  set_has_contents_h();
  contents_h_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.contents_h)
}

// required bool contents_l = 6;
inline bool user_desc_t::has_contents_l() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void user_desc_t::set_has_contents_l() {
  _has_bits_[0] |= 0x00000020u;
}
inline void user_desc_t::clear_has_contents_l() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void user_desc_t::clear_contents_l() {
  contents_l_ = false;
  clear_has_contents_l();
}
inline bool user_desc_t::contents_l() const {
  // @@protoc_insertion_point(field_get:user_desc_t.contents_l)
  return contents_l_;
}
inline void user_desc_t::set_contents_l(bool value) {
  set_has_contents_l();
  contents_l_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.contents_l)
}

// required bool read_exec_only = 7 [default = true];
inline bool user_desc_t::has_read_exec_only() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void user_desc_t::set_has_read_exec_only() {
  _has_bits_[0] |= 0x00000040u;
}
inline void user_desc_t::clear_has_read_exec_only() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void user_desc_t::clear_read_exec_only() {
  read_exec_only_ = true;
  clear_has_read_exec_only();
}
inline bool user_desc_t::read_exec_only() const {
  // @@protoc_insertion_point(field_get:user_desc_t.read_exec_only)
  return read_exec_only_;
}
inline void user_desc_t::set_read_exec_only(bool value) {
  set_has_read_exec_only();
  read_exec_only_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.read_exec_only)
}

// required bool limit_in_pages = 8;
inline bool user_desc_t::has_limit_in_pages() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void user_desc_t::set_has_limit_in_pages() {
  _has_bits_[0] |= 0x00000080u;
}
inline void user_desc_t::clear_has_limit_in_pages() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void user_desc_t::clear_limit_in_pages() {
  limit_in_pages_ = false;
  clear_has_limit_in_pages();
}
inline bool user_desc_t::limit_in_pages() const {
  // @@protoc_insertion_point(field_get:user_desc_t.limit_in_pages)
  return limit_in_pages_;
}
inline void user_desc_t::set_limit_in_pages(bool value) {
  set_has_limit_in_pages();
  limit_in_pages_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.limit_in_pages)
}

// required bool seg_not_present = 9 [default = true];
inline bool user_desc_t::has_seg_not_present() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void user_desc_t::set_has_seg_not_present() {
  _has_bits_[0] |= 0x00000100u;
}
inline void user_desc_t::clear_has_seg_not_present() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void user_desc_t::clear_seg_not_present() {
  seg_not_present_ = true;
  clear_has_seg_not_present();
}
inline bool user_desc_t::seg_not_present() const {
  // @@protoc_insertion_point(field_get:user_desc_t.seg_not_present)
  return seg_not_present_;
}
inline void user_desc_t::set_seg_not_present(bool value) {
  set_has_seg_not_present();
  seg_not_present_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.seg_not_present)
}

// required bool useable = 10;
inline bool user_desc_t::has_useable() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void user_desc_t::set_has_useable() {
  _has_bits_[0] |= 0x00000200u;
}
inline void user_desc_t::clear_has_useable() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void user_desc_t::clear_useable() {
  useable_ = false;
  clear_has_useable();
}
inline bool user_desc_t::useable() const {
  // @@protoc_insertion_point(field_get:user_desc_t.useable)
  return useable_;
}
inline void user_desc_t::set_useable(bool value) {
  set_has_useable();
  useable_ = value;
  // @@protoc_insertion_point(field_set:user_desc_t.useable)
}

// -------------------------------------------------------------------

// thread_info_x86

// required uint64 clear_tid_addr = 1;
inline bool thread_info_x86::has_clear_tid_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void thread_info_x86::set_has_clear_tid_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void thread_info_x86::clear_has_clear_tid_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void thread_info_x86::clear_clear_tid_addr() {
  clear_tid_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_clear_tid_addr();
}
inline ::google::protobuf::uint64 thread_info_x86::clear_tid_addr() const {
  // @@protoc_insertion_point(field_get:thread_info_x86.clear_tid_addr)
  return clear_tid_addr_;
}
inline void thread_info_x86::set_clear_tid_addr(::google::protobuf::uint64 value) {
  set_has_clear_tid_addr();
  clear_tid_addr_ = value;
  // @@protoc_insertion_point(field_set:thread_info_x86.clear_tid_addr)
}

// required .user_x86_regs_entry gpregs = 2;
inline bool thread_info_x86::has_gpregs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void thread_info_x86::set_has_gpregs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void thread_info_x86::clear_has_gpregs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void thread_info_x86::clear_gpregs() {
  if (gpregs_ != NULL) gpregs_->::user_x86_regs_entry::Clear();
  clear_has_gpregs();
}
inline const ::user_x86_regs_entry& thread_info_x86::gpregs() const {
  // @@protoc_insertion_point(field_get:thread_info_x86.gpregs)
  return gpregs_ != NULL ? *gpregs_ : *default_instance_->gpregs_;
}
inline ::user_x86_regs_entry* thread_info_x86::mutable_gpregs() {
  set_has_gpregs();
  if (gpregs_ == NULL) gpregs_ = new ::user_x86_regs_entry;
  // @@protoc_insertion_point(field_mutable:thread_info_x86.gpregs)
  return gpregs_;
}
inline ::user_x86_regs_entry* thread_info_x86::release_gpregs() {
  clear_has_gpregs();
  ::user_x86_regs_entry* temp = gpregs_;
  gpregs_ = NULL;
  return temp;
}
inline void thread_info_x86::set_allocated_gpregs(::user_x86_regs_entry* gpregs) {
  delete gpregs_;
  gpregs_ = gpregs;
  if (gpregs) {
    set_has_gpregs();
  } else {
    clear_has_gpregs();
  }
  // @@protoc_insertion_point(field_set_allocated:thread_info_x86.gpregs)
}

// required .user_x86_fpregs_entry fpregs = 3;
inline bool thread_info_x86::has_fpregs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void thread_info_x86::set_has_fpregs() {
  _has_bits_[0] |= 0x00000004u;
}
inline void thread_info_x86::clear_has_fpregs() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void thread_info_x86::clear_fpregs() {
  if (fpregs_ != NULL) fpregs_->::user_x86_fpregs_entry::Clear();
  clear_has_fpregs();
}
inline const ::user_x86_fpregs_entry& thread_info_x86::fpregs() const {
  // @@protoc_insertion_point(field_get:thread_info_x86.fpregs)
  return fpregs_ != NULL ? *fpregs_ : *default_instance_->fpregs_;
}
inline ::user_x86_fpregs_entry* thread_info_x86::mutable_fpregs() {
  set_has_fpregs();
  if (fpregs_ == NULL) fpregs_ = new ::user_x86_fpregs_entry;
  // @@protoc_insertion_point(field_mutable:thread_info_x86.fpregs)
  return fpregs_;
}
inline ::user_x86_fpregs_entry* thread_info_x86::release_fpregs() {
  clear_has_fpregs();
  ::user_x86_fpregs_entry* temp = fpregs_;
  fpregs_ = NULL;
  return temp;
}
inline void thread_info_x86::set_allocated_fpregs(::user_x86_fpregs_entry* fpregs) {
  delete fpregs_;
  fpregs_ = fpregs;
  if (fpregs) {
    set_has_fpregs();
  } else {
    clear_has_fpregs();
  }
  // @@protoc_insertion_point(field_set_allocated:thread_info_x86.fpregs)
}

// repeated .user_desc_t tls = 4;
inline int thread_info_x86::tls_size() const {
  return tls_.size();
}
inline void thread_info_x86::clear_tls() {
  tls_.Clear();
}
inline const ::user_desc_t& thread_info_x86::tls(int index) const {
  // @@protoc_insertion_point(field_get:thread_info_x86.tls)
  return tls_.Get(index);
}
inline ::user_desc_t* thread_info_x86::mutable_tls(int index) {
  // @@protoc_insertion_point(field_mutable:thread_info_x86.tls)
  return tls_.Mutable(index);
}
inline ::user_desc_t* thread_info_x86::add_tls() {
  // @@protoc_insertion_point(field_add:thread_info_x86.tls)
  return tls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::user_desc_t >&
thread_info_x86::tls() const {
  // @@protoc_insertion_point(field_list:thread_info_x86.tls)
  return tls_;
}
inline ::google::protobuf::RepeatedPtrField< ::user_desc_t >*
thread_info_x86::mutable_tls() {
  // @@protoc_insertion_point(field_mutable_list:thread_info_x86.tls)
  return &tls_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::user_x86_regs_mode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::user_x86_regs_mode>() {
  return ::user_x86_regs_mode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_core_2dx86_2eproto__INCLUDED
