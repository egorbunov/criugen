// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core-ppc64.proto

#ifndef PROTOBUF_core_2dppc64_2eproto__INCLUDED
#define PROTOBUF_core_2dppc64_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_core_2dppc64_2eproto();
void protobuf_AssignDesc_core_2dppc64_2eproto();
void protobuf_ShutdownFile_core_2dppc64_2eproto();

class user_ppc64_regs_entry;
class user_ppc64_fpstate_entry;
class user_ppc64_vrstate_entry;
class user_ppc64_vsxstate_entry;
class thread_info_ppc64;

// ===================================================================

class user_ppc64_regs_entry : public ::google::protobuf::Message {
 public:
  user_ppc64_regs_entry();
  virtual ~user_ppc64_regs_entry();

  user_ppc64_regs_entry(const user_ppc64_regs_entry& from);

  inline user_ppc64_regs_entry& operator=(const user_ppc64_regs_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_ppc64_regs_entry& default_instance();

  void Swap(user_ppc64_regs_entry* other);

  // implements Message ----------------------------------------------

  user_ppc64_regs_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_ppc64_regs_entry& from);
  void MergeFrom(const user_ppc64_regs_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 gpr = 1;
  inline int gpr_size() const;
  inline void clear_gpr();
  static const int kGprFieldNumber = 1;
  inline ::google::protobuf::uint64 gpr(int index) const;
  inline void set_gpr(int index, ::google::protobuf::uint64 value);
  inline void add_gpr(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      gpr() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_gpr();

  // required uint64 nip = 2;
  inline bool has_nip() const;
  inline void clear_nip();
  static const int kNipFieldNumber = 2;
  inline ::google::protobuf::uint64 nip() const;
  inline void set_nip(::google::protobuf::uint64 value);

  // required uint64 msr = 3;
  inline bool has_msr() const;
  inline void clear_msr();
  static const int kMsrFieldNumber = 3;
  inline ::google::protobuf::uint64 msr() const;
  inline void set_msr(::google::protobuf::uint64 value);

  // required uint64 orig_gpr3 = 4;
  inline bool has_orig_gpr3() const;
  inline void clear_orig_gpr3();
  static const int kOrigGpr3FieldNumber = 4;
  inline ::google::protobuf::uint64 orig_gpr3() const;
  inline void set_orig_gpr3(::google::protobuf::uint64 value);

  // required uint64 ctr = 5;
  inline bool has_ctr() const;
  inline void clear_ctr();
  static const int kCtrFieldNumber = 5;
  inline ::google::protobuf::uint64 ctr() const;
  inline void set_ctr(::google::protobuf::uint64 value);

  // required uint64 link = 6;
  inline bool has_link() const;
  inline void clear_link();
  static const int kLinkFieldNumber = 6;
  inline ::google::protobuf::uint64 link() const;
  inline void set_link(::google::protobuf::uint64 value);

  // required uint64 xer = 7;
  inline bool has_xer() const;
  inline void clear_xer();
  static const int kXerFieldNumber = 7;
  inline ::google::protobuf::uint64 xer() const;
  inline void set_xer(::google::protobuf::uint64 value);

  // required uint64 ccr = 8;
  inline bool has_ccr() const;
  inline void clear_ccr();
  static const int kCcrFieldNumber = 8;
  inline ::google::protobuf::uint64 ccr() const;
  inline void set_ccr(::google::protobuf::uint64 value);

  // required uint64 trap = 9;
  inline bool has_trap() const;
  inline void clear_trap();
  static const int kTrapFieldNumber = 9;
  inline ::google::protobuf::uint64 trap() const;
  inline void set_trap(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:user_ppc64_regs_entry)
 private:
  inline void set_has_nip();
  inline void clear_has_nip();
  inline void set_has_msr();
  inline void clear_has_msr();
  inline void set_has_orig_gpr3();
  inline void clear_has_orig_gpr3();
  inline void set_has_ctr();
  inline void clear_has_ctr();
  inline void set_has_link();
  inline void clear_has_link();
  inline void set_has_xer();
  inline void clear_has_xer();
  inline void set_has_ccr();
  inline void clear_has_ccr();
  inline void set_has_trap();
  inline void clear_has_trap();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > gpr_;
  ::google::protobuf::uint64 nip_;
  ::google::protobuf::uint64 msr_;
  ::google::protobuf::uint64 orig_gpr3_;
  ::google::protobuf::uint64 ctr_;
  ::google::protobuf::uint64 link_;
  ::google::protobuf::uint64 xer_;
  ::google::protobuf::uint64 ccr_;
  ::google::protobuf::uint64 trap_;
  friend void  protobuf_AddDesc_core_2dppc64_2eproto();
  friend void protobuf_AssignDesc_core_2dppc64_2eproto();
  friend void protobuf_ShutdownFile_core_2dppc64_2eproto();

  void InitAsDefaultInstance();
  static user_ppc64_regs_entry* default_instance_;
};
// -------------------------------------------------------------------

class user_ppc64_fpstate_entry : public ::google::protobuf::Message {
 public:
  user_ppc64_fpstate_entry();
  virtual ~user_ppc64_fpstate_entry();

  user_ppc64_fpstate_entry(const user_ppc64_fpstate_entry& from);

  inline user_ppc64_fpstate_entry& operator=(const user_ppc64_fpstate_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_ppc64_fpstate_entry& default_instance();

  void Swap(user_ppc64_fpstate_entry* other);

  // implements Message ----------------------------------------------

  user_ppc64_fpstate_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_ppc64_fpstate_entry& from);
  void MergeFrom(const user_ppc64_fpstate_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 fpregs = 1;
  inline int fpregs_size() const;
  inline void clear_fpregs();
  static const int kFpregsFieldNumber = 1;
  inline ::google::protobuf::uint64 fpregs(int index) const;
  inline void set_fpregs(int index, ::google::protobuf::uint64 value);
  inline void add_fpregs(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      fpregs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_fpregs();

  // @@protoc_insertion_point(class_scope:user_ppc64_fpstate_entry)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > fpregs_;
  friend void  protobuf_AddDesc_core_2dppc64_2eproto();
  friend void protobuf_AssignDesc_core_2dppc64_2eproto();
  friend void protobuf_ShutdownFile_core_2dppc64_2eproto();

  void InitAsDefaultInstance();
  static user_ppc64_fpstate_entry* default_instance_;
};
// -------------------------------------------------------------------

class user_ppc64_vrstate_entry : public ::google::protobuf::Message {
 public:
  user_ppc64_vrstate_entry();
  virtual ~user_ppc64_vrstate_entry();

  user_ppc64_vrstate_entry(const user_ppc64_vrstate_entry& from);

  inline user_ppc64_vrstate_entry& operator=(const user_ppc64_vrstate_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_ppc64_vrstate_entry& default_instance();

  void Swap(user_ppc64_vrstate_entry* other);

  // implements Message ----------------------------------------------

  user_ppc64_vrstate_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_ppc64_vrstate_entry& from);
  void MergeFrom(const user_ppc64_vrstate_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 vrregs = 1;
  inline int vrregs_size() const;
  inline void clear_vrregs();
  static const int kVrregsFieldNumber = 1;
  inline ::google::protobuf::uint64 vrregs(int index) const;
  inline void set_vrregs(int index, ::google::protobuf::uint64 value);
  inline void add_vrregs(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      vrregs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_vrregs();

  // required uint32 vrsave = 2;
  inline bool has_vrsave() const;
  inline void clear_vrsave();
  static const int kVrsaveFieldNumber = 2;
  inline ::google::protobuf::uint32 vrsave() const;
  inline void set_vrsave(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:user_ppc64_vrstate_entry)
 private:
  inline void set_has_vrsave();
  inline void clear_has_vrsave();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > vrregs_;
  ::google::protobuf::uint32 vrsave_;
  friend void  protobuf_AddDesc_core_2dppc64_2eproto();
  friend void protobuf_AssignDesc_core_2dppc64_2eproto();
  friend void protobuf_ShutdownFile_core_2dppc64_2eproto();

  void InitAsDefaultInstance();
  static user_ppc64_vrstate_entry* default_instance_;
};
// -------------------------------------------------------------------

class user_ppc64_vsxstate_entry : public ::google::protobuf::Message {
 public:
  user_ppc64_vsxstate_entry();
  virtual ~user_ppc64_vsxstate_entry();

  user_ppc64_vsxstate_entry(const user_ppc64_vsxstate_entry& from);

  inline user_ppc64_vsxstate_entry& operator=(const user_ppc64_vsxstate_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_ppc64_vsxstate_entry& default_instance();

  void Swap(user_ppc64_vsxstate_entry* other);

  // implements Message ----------------------------------------------

  user_ppc64_vsxstate_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_ppc64_vsxstate_entry& from);
  void MergeFrom(const user_ppc64_vsxstate_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 vsxregs = 1;
  inline int vsxregs_size() const;
  inline void clear_vsxregs();
  static const int kVsxregsFieldNumber = 1;
  inline ::google::protobuf::uint64 vsxregs(int index) const;
  inline void set_vsxregs(int index, ::google::protobuf::uint64 value);
  inline void add_vsxregs(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      vsxregs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_vsxregs();

  // @@protoc_insertion_point(class_scope:user_ppc64_vsxstate_entry)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > vsxregs_;
  friend void  protobuf_AddDesc_core_2dppc64_2eproto();
  friend void protobuf_AssignDesc_core_2dppc64_2eproto();
  friend void protobuf_ShutdownFile_core_2dppc64_2eproto();

  void InitAsDefaultInstance();
  static user_ppc64_vsxstate_entry* default_instance_;
};
// -------------------------------------------------------------------

class thread_info_ppc64 : public ::google::protobuf::Message {
 public:
  thread_info_ppc64();
  virtual ~thread_info_ppc64();

  thread_info_ppc64(const thread_info_ppc64& from);

  inline thread_info_ppc64& operator=(const thread_info_ppc64& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const thread_info_ppc64& default_instance();

  void Swap(thread_info_ppc64* other);

  // implements Message ----------------------------------------------

  thread_info_ppc64* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const thread_info_ppc64& from);
  void MergeFrom(const thread_info_ppc64& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 clear_tid_addr = 1;
  inline bool has_clear_tid_addr() const;
  inline void clear_clear_tid_addr();
  static const int kClearTidAddrFieldNumber = 1;
  inline ::google::protobuf::uint64 clear_tid_addr() const;
  inline void set_clear_tid_addr(::google::protobuf::uint64 value);

  // required .user_ppc64_regs_entry gpregs = 2;
  inline bool has_gpregs() const;
  inline void clear_gpregs();
  static const int kGpregsFieldNumber = 2;
  inline const ::user_ppc64_regs_entry& gpregs() const;
  inline ::user_ppc64_regs_entry* mutable_gpregs();
  inline ::user_ppc64_regs_entry* release_gpregs();
  inline void set_allocated_gpregs(::user_ppc64_regs_entry* gpregs);

  // optional .user_ppc64_fpstate_entry fpstate = 3;
  inline bool has_fpstate() const;
  inline void clear_fpstate();
  static const int kFpstateFieldNumber = 3;
  inline const ::user_ppc64_fpstate_entry& fpstate() const;
  inline ::user_ppc64_fpstate_entry* mutable_fpstate();
  inline ::user_ppc64_fpstate_entry* release_fpstate();
  inline void set_allocated_fpstate(::user_ppc64_fpstate_entry* fpstate);

  // optional .user_ppc64_vrstate_entry vrstate = 4;
  inline bool has_vrstate() const;
  inline void clear_vrstate();
  static const int kVrstateFieldNumber = 4;
  inline const ::user_ppc64_vrstate_entry& vrstate() const;
  inline ::user_ppc64_vrstate_entry* mutable_vrstate();
  inline ::user_ppc64_vrstate_entry* release_vrstate();
  inline void set_allocated_vrstate(::user_ppc64_vrstate_entry* vrstate);

  // optional .user_ppc64_vsxstate_entry vsxstate = 5;
  inline bool has_vsxstate() const;
  inline void clear_vsxstate();
  static const int kVsxstateFieldNumber = 5;
  inline const ::user_ppc64_vsxstate_entry& vsxstate() const;
  inline ::user_ppc64_vsxstate_entry* mutable_vsxstate();
  inline ::user_ppc64_vsxstate_entry* release_vsxstate();
  inline void set_allocated_vsxstate(::user_ppc64_vsxstate_entry* vsxstate);

  // @@protoc_insertion_point(class_scope:thread_info_ppc64)
 private:
  inline void set_has_clear_tid_addr();
  inline void clear_has_clear_tid_addr();
  inline void set_has_gpregs();
  inline void clear_has_gpregs();
  inline void set_has_fpstate();
  inline void clear_has_fpstate();
  inline void set_has_vrstate();
  inline void clear_has_vrstate();
  inline void set_has_vsxstate();
  inline void clear_has_vsxstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 clear_tid_addr_;
  ::user_ppc64_regs_entry* gpregs_;
  ::user_ppc64_fpstate_entry* fpstate_;
  ::user_ppc64_vrstate_entry* vrstate_;
  ::user_ppc64_vsxstate_entry* vsxstate_;
  friend void  protobuf_AddDesc_core_2dppc64_2eproto();
  friend void protobuf_AssignDesc_core_2dppc64_2eproto();
  friend void protobuf_ShutdownFile_core_2dppc64_2eproto();

  void InitAsDefaultInstance();
  static thread_info_ppc64* default_instance_;
};
// ===================================================================


// ===================================================================

// user_ppc64_regs_entry

// repeated uint64 gpr = 1;
inline int user_ppc64_regs_entry::gpr_size() const {
  return gpr_.size();
}
inline void user_ppc64_regs_entry::clear_gpr() {
  gpr_.Clear();
}
inline ::google::protobuf::uint64 user_ppc64_regs_entry::gpr(int index) const {
  // @@protoc_insertion_point(field_get:user_ppc64_regs_entry.gpr)
  return gpr_.Get(index);
}
inline void user_ppc64_regs_entry::set_gpr(int index, ::google::protobuf::uint64 value) {
  gpr_.Set(index, value);
  // @@protoc_insertion_point(field_set:user_ppc64_regs_entry.gpr)
}
inline void user_ppc64_regs_entry::add_gpr(::google::protobuf::uint64 value) {
  gpr_.Add(value);
  // @@protoc_insertion_point(field_add:user_ppc64_regs_entry.gpr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
user_ppc64_regs_entry::gpr() const {
  // @@protoc_insertion_point(field_list:user_ppc64_regs_entry.gpr)
  return gpr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
user_ppc64_regs_entry::mutable_gpr() {
  // @@protoc_insertion_point(field_mutable_list:user_ppc64_regs_entry.gpr)
  return &gpr_;
}

// required uint64 nip = 2;
inline bool user_ppc64_regs_entry::has_nip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_ppc64_regs_entry::set_has_nip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_ppc64_regs_entry::clear_has_nip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_ppc64_regs_entry::clear_nip() {
  nip_ = GOOGLE_ULONGLONG(0);
  clear_has_nip();
}
inline ::google::protobuf::uint64 user_ppc64_regs_entry::nip() const {
  // @@protoc_insertion_point(field_get:user_ppc64_regs_entry.nip)
  return nip_;
}
inline void user_ppc64_regs_entry::set_nip(::google::protobuf::uint64 value) {
  set_has_nip();
  nip_ = value;
  // @@protoc_insertion_point(field_set:user_ppc64_regs_entry.nip)
}

// required uint64 msr = 3;
inline bool user_ppc64_regs_entry::has_msr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_ppc64_regs_entry::set_has_msr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_ppc64_regs_entry::clear_has_msr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_ppc64_regs_entry::clear_msr() {
  msr_ = GOOGLE_ULONGLONG(0);
  clear_has_msr();
}
inline ::google::protobuf::uint64 user_ppc64_regs_entry::msr() const {
  // @@protoc_insertion_point(field_get:user_ppc64_regs_entry.msr)
  return msr_;
}
inline void user_ppc64_regs_entry::set_msr(::google::protobuf::uint64 value) {
  set_has_msr();
  msr_ = value;
  // @@protoc_insertion_point(field_set:user_ppc64_regs_entry.msr)
}

// required uint64 orig_gpr3 = 4;
inline bool user_ppc64_regs_entry::has_orig_gpr3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_ppc64_regs_entry::set_has_orig_gpr3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_ppc64_regs_entry::clear_has_orig_gpr3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_ppc64_regs_entry::clear_orig_gpr3() {
  orig_gpr3_ = GOOGLE_ULONGLONG(0);
  clear_has_orig_gpr3();
}
inline ::google::protobuf::uint64 user_ppc64_regs_entry::orig_gpr3() const {
  // @@protoc_insertion_point(field_get:user_ppc64_regs_entry.orig_gpr3)
  return orig_gpr3_;
}
inline void user_ppc64_regs_entry::set_orig_gpr3(::google::protobuf::uint64 value) {
  set_has_orig_gpr3();
  orig_gpr3_ = value;
  // @@protoc_insertion_point(field_set:user_ppc64_regs_entry.orig_gpr3)
}

// required uint64 ctr = 5;
inline bool user_ppc64_regs_entry::has_ctr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_ppc64_regs_entry::set_has_ctr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_ppc64_regs_entry::clear_has_ctr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_ppc64_regs_entry::clear_ctr() {
  ctr_ = GOOGLE_ULONGLONG(0);
  clear_has_ctr();
}
inline ::google::protobuf::uint64 user_ppc64_regs_entry::ctr() const {
  // @@protoc_insertion_point(field_get:user_ppc64_regs_entry.ctr)
  return ctr_;
}
inline void user_ppc64_regs_entry::set_ctr(::google::protobuf::uint64 value) {
  set_has_ctr();
  ctr_ = value;
  // @@protoc_insertion_point(field_set:user_ppc64_regs_entry.ctr)
}

// required uint64 link = 6;
inline bool user_ppc64_regs_entry::has_link() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void user_ppc64_regs_entry::set_has_link() {
  _has_bits_[0] |= 0x00000020u;
}
inline void user_ppc64_regs_entry::clear_has_link() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void user_ppc64_regs_entry::clear_link() {
  link_ = GOOGLE_ULONGLONG(0);
  clear_has_link();
}
inline ::google::protobuf::uint64 user_ppc64_regs_entry::link() const {
  // @@protoc_insertion_point(field_get:user_ppc64_regs_entry.link)
  return link_;
}
inline void user_ppc64_regs_entry::set_link(::google::protobuf::uint64 value) {
  set_has_link();
  link_ = value;
  // @@protoc_insertion_point(field_set:user_ppc64_regs_entry.link)
}

// required uint64 xer = 7;
inline bool user_ppc64_regs_entry::has_xer() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void user_ppc64_regs_entry::set_has_xer() {
  _has_bits_[0] |= 0x00000040u;
}
inline void user_ppc64_regs_entry::clear_has_xer() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void user_ppc64_regs_entry::clear_xer() {
  xer_ = GOOGLE_ULONGLONG(0);
  clear_has_xer();
}
inline ::google::protobuf::uint64 user_ppc64_regs_entry::xer() const {
  // @@protoc_insertion_point(field_get:user_ppc64_regs_entry.xer)
  return xer_;
}
inline void user_ppc64_regs_entry::set_xer(::google::protobuf::uint64 value) {
  set_has_xer();
  xer_ = value;
  // @@protoc_insertion_point(field_set:user_ppc64_regs_entry.xer)
}

// required uint64 ccr = 8;
inline bool user_ppc64_regs_entry::has_ccr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void user_ppc64_regs_entry::set_has_ccr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void user_ppc64_regs_entry::clear_has_ccr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void user_ppc64_regs_entry::clear_ccr() {
  ccr_ = GOOGLE_ULONGLONG(0);
  clear_has_ccr();
}
inline ::google::protobuf::uint64 user_ppc64_regs_entry::ccr() const {
  // @@protoc_insertion_point(field_get:user_ppc64_regs_entry.ccr)
  return ccr_;
}
inline void user_ppc64_regs_entry::set_ccr(::google::protobuf::uint64 value) {
  set_has_ccr();
  ccr_ = value;
  // @@protoc_insertion_point(field_set:user_ppc64_regs_entry.ccr)
}

// required uint64 trap = 9;
inline bool user_ppc64_regs_entry::has_trap() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void user_ppc64_regs_entry::set_has_trap() {
  _has_bits_[0] |= 0x00000100u;
}
inline void user_ppc64_regs_entry::clear_has_trap() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void user_ppc64_regs_entry::clear_trap() {
  trap_ = GOOGLE_ULONGLONG(0);
  clear_has_trap();
}
inline ::google::protobuf::uint64 user_ppc64_regs_entry::trap() const {
  // @@protoc_insertion_point(field_get:user_ppc64_regs_entry.trap)
  return trap_;
}
inline void user_ppc64_regs_entry::set_trap(::google::protobuf::uint64 value) {
  set_has_trap();
  trap_ = value;
  // @@protoc_insertion_point(field_set:user_ppc64_regs_entry.trap)
}

// -------------------------------------------------------------------

// user_ppc64_fpstate_entry

// repeated uint64 fpregs = 1;
inline int user_ppc64_fpstate_entry::fpregs_size() const {
  return fpregs_.size();
}
inline void user_ppc64_fpstate_entry::clear_fpregs() {
  fpregs_.Clear();
}
inline ::google::protobuf::uint64 user_ppc64_fpstate_entry::fpregs(int index) const {
  // @@protoc_insertion_point(field_get:user_ppc64_fpstate_entry.fpregs)
  return fpregs_.Get(index);
}
inline void user_ppc64_fpstate_entry::set_fpregs(int index, ::google::protobuf::uint64 value) {
  fpregs_.Set(index, value);
  // @@protoc_insertion_point(field_set:user_ppc64_fpstate_entry.fpregs)
}
inline void user_ppc64_fpstate_entry::add_fpregs(::google::protobuf::uint64 value) {
  fpregs_.Add(value);
  // @@protoc_insertion_point(field_add:user_ppc64_fpstate_entry.fpregs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
user_ppc64_fpstate_entry::fpregs() const {
  // @@protoc_insertion_point(field_list:user_ppc64_fpstate_entry.fpregs)
  return fpregs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
user_ppc64_fpstate_entry::mutable_fpregs() {
  // @@protoc_insertion_point(field_mutable_list:user_ppc64_fpstate_entry.fpregs)
  return &fpregs_;
}

// -------------------------------------------------------------------

// user_ppc64_vrstate_entry

// repeated uint64 vrregs = 1;
inline int user_ppc64_vrstate_entry::vrregs_size() const {
  return vrregs_.size();
}
inline void user_ppc64_vrstate_entry::clear_vrregs() {
  vrregs_.Clear();
}
inline ::google::protobuf::uint64 user_ppc64_vrstate_entry::vrregs(int index) const {
  // @@protoc_insertion_point(field_get:user_ppc64_vrstate_entry.vrregs)
  return vrregs_.Get(index);
}
inline void user_ppc64_vrstate_entry::set_vrregs(int index, ::google::protobuf::uint64 value) {
  vrregs_.Set(index, value);
  // @@protoc_insertion_point(field_set:user_ppc64_vrstate_entry.vrregs)
}
inline void user_ppc64_vrstate_entry::add_vrregs(::google::protobuf::uint64 value) {
  vrregs_.Add(value);
  // @@protoc_insertion_point(field_add:user_ppc64_vrstate_entry.vrregs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
user_ppc64_vrstate_entry::vrregs() const {
  // @@protoc_insertion_point(field_list:user_ppc64_vrstate_entry.vrregs)
  return vrregs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
user_ppc64_vrstate_entry::mutable_vrregs() {
  // @@protoc_insertion_point(field_mutable_list:user_ppc64_vrstate_entry.vrregs)
  return &vrregs_;
}

// required uint32 vrsave = 2;
inline bool user_ppc64_vrstate_entry::has_vrsave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_ppc64_vrstate_entry::set_has_vrsave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_ppc64_vrstate_entry::clear_has_vrsave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_ppc64_vrstate_entry::clear_vrsave() {
  vrsave_ = 0u;
  clear_has_vrsave();
}
inline ::google::protobuf::uint32 user_ppc64_vrstate_entry::vrsave() const {
  // @@protoc_insertion_point(field_get:user_ppc64_vrstate_entry.vrsave)
  return vrsave_;
}
inline void user_ppc64_vrstate_entry::set_vrsave(::google::protobuf::uint32 value) {
  set_has_vrsave();
  vrsave_ = value;
  // @@protoc_insertion_point(field_set:user_ppc64_vrstate_entry.vrsave)
}

// -------------------------------------------------------------------

// user_ppc64_vsxstate_entry

// repeated uint64 vsxregs = 1;
inline int user_ppc64_vsxstate_entry::vsxregs_size() const {
  return vsxregs_.size();
}
inline void user_ppc64_vsxstate_entry::clear_vsxregs() {
  vsxregs_.Clear();
}
inline ::google::protobuf::uint64 user_ppc64_vsxstate_entry::vsxregs(int index) const {
  // @@protoc_insertion_point(field_get:user_ppc64_vsxstate_entry.vsxregs)
  return vsxregs_.Get(index);
}
inline void user_ppc64_vsxstate_entry::set_vsxregs(int index, ::google::protobuf::uint64 value) {
  vsxregs_.Set(index, value);
  // @@protoc_insertion_point(field_set:user_ppc64_vsxstate_entry.vsxregs)
}
inline void user_ppc64_vsxstate_entry::add_vsxregs(::google::protobuf::uint64 value) {
  vsxregs_.Add(value);
  // @@protoc_insertion_point(field_add:user_ppc64_vsxstate_entry.vsxregs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
user_ppc64_vsxstate_entry::vsxregs() const {
  // @@protoc_insertion_point(field_list:user_ppc64_vsxstate_entry.vsxregs)
  return vsxregs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
user_ppc64_vsxstate_entry::mutable_vsxregs() {
  // @@protoc_insertion_point(field_mutable_list:user_ppc64_vsxstate_entry.vsxregs)
  return &vsxregs_;
}

// -------------------------------------------------------------------

// thread_info_ppc64

// required uint64 clear_tid_addr = 1;
inline bool thread_info_ppc64::has_clear_tid_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void thread_info_ppc64::set_has_clear_tid_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void thread_info_ppc64::clear_has_clear_tid_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void thread_info_ppc64::clear_clear_tid_addr() {
  clear_tid_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_clear_tid_addr();
}
inline ::google::protobuf::uint64 thread_info_ppc64::clear_tid_addr() const {
  // @@protoc_insertion_point(field_get:thread_info_ppc64.clear_tid_addr)
  return clear_tid_addr_;
}
inline void thread_info_ppc64::set_clear_tid_addr(::google::protobuf::uint64 value) {
  set_has_clear_tid_addr();
  clear_tid_addr_ = value;
  // @@protoc_insertion_point(field_set:thread_info_ppc64.clear_tid_addr)
}

// required .user_ppc64_regs_entry gpregs = 2;
inline bool thread_info_ppc64::has_gpregs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void thread_info_ppc64::set_has_gpregs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void thread_info_ppc64::clear_has_gpregs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void thread_info_ppc64::clear_gpregs() {
  if (gpregs_ != NULL) gpregs_->::user_ppc64_regs_entry::Clear();
  clear_has_gpregs();
}
inline const ::user_ppc64_regs_entry& thread_info_ppc64::gpregs() const {
  // @@protoc_insertion_point(field_get:thread_info_ppc64.gpregs)
  return gpregs_ != NULL ? *gpregs_ : *default_instance_->gpregs_;
}
inline ::user_ppc64_regs_entry* thread_info_ppc64::mutable_gpregs() {
  set_has_gpregs();
  if (gpregs_ == NULL) gpregs_ = new ::user_ppc64_regs_entry;
  // @@protoc_insertion_point(field_mutable:thread_info_ppc64.gpregs)
  return gpregs_;
}
inline ::user_ppc64_regs_entry* thread_info_ppc64::release_gpregs() {
  clear_has_gpregs();
  ::user_ppc64_regs_entry* temp = gpregs_;
  gpregs_ = NULL;
  return temp;
}
inline void thread_info_ppc64::set_allocated_gpregs(::user_ppc64_regs_entry* gpregs) {
  delete gpregs_;
  gpregs_ = gpregs;
  if (gpregs) {
    set_has_gpregs();
  } else {
    clear_has_gpregs();
  }
  // @@protoc_insertion_point(field_set_allocated:thread_info_ppc64.gpregs)
}

// optional .user_ppc64_fpstate_entry fpstate = 3;
inline bool thread_info_ppc64::has_fpstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void thread_info_ppc64::set_has_fpstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void thread_info_ppc64::clear_has_fpstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void thread_info_ppc64::clear_fpstate() {
  if (fpstate_ != NULL) fpstate_->::user_ppc64_fpstate_entry::Clear();
  clear_has_fpstate();
}
inline const ::user_ppc64_fpstate_entry& thread_info_ppc64::fpstate() const {
  // @@protoc_insertion_point(field_get:thread_info_ppc64.fpstate)
  return fpstate_ != NULL ? *fpstate_ : *default_instance_->fpstate_;
}
inline ::user_ppc64_fpstate_entry* thread_info_ppc64::mutable_fpstate() {
  set_has_fpstate();
  if (fpstate_ == NULL) fpstate_ = new ::user_ppc64_fpstate_entry;
  // @@protoc_insertion_point(field_mutable:thread_info_ppc64.fpstate)
  return fpstate_;
}
inline ::user_ppc64_fpstate_entry* thread_info_ppc64::release_fpstate() {
  clear_has_fpstate();
  ::user_ppc64_fpstate_entry* temp = fpstate_;
  fpstate_ = NULL;
  return temp;
}
inline void thread_info_ppc64::set_allocated_fpstate(::user_ppc64_fpstate_entry* fpstate) {
  delete fpstate_;
  fpstate_ = fpstate;
  if (fpstate) {
    set_has_fpstate();
  } else {
    clear_has_fpstate();
  }
  // @@protoc_insertion_point(field_set_allocated:thread_info_ppc64.fpstate)
}

// optional .user_ppc64_vrstate_entry vrstate = 4;
inline bool thread_info_ppc64::has_vrstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void thread_info_ppc64::set_has_vrstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void thread_info_ppc64::clear_has_vrstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void thread_info_ppc64::clear_vrstate() {
  if (vrstate_ != NULL) vrstate_->::user_ppc64_vrstate_entry::Clear();
  clear_has_vrstate();
}
inline const ::user_ppc64_vrstate_entry& thread_info_ppc64::vrstate() const {
  // @@protoc_insertion_point(field_get:thread_info_ppc64.vrstate)
  return vrstate_ != NULL ? *vrstate_ : *default_instance_->vrstate_;
}
inline ::user_ppc64_vrstate_entry* thread_info_ppc64::mutable_vrstate() {
  set_has_vrstate();
  if (vrstate_ == NULL) vrstate_ = new ::user_ppc64_vrstate_entry;
  // @@protoc_insertion_point(field_mutable:thread_info_ppc64.vrstate)
  return vrstate_;
}
inline ::user_ppc64_vrstate_entry* thread_info_ppc64::release_vrstate() {
  clear_has_vrstate();
  ::user_ppc64_vrstate_entry* temp = vrstate_;
  vrstate_ = NULL;
  return temp;
}
inline void thread_info_ppc64::set_allocated_vrstate(::user_ppc64_vrstate_entry* vrstate) {
  delete vrstate_;
  vrstate_ = vrstate;
  if (vrstate) {
    set_has_vrstate();
  } else {
    clear_has_vrstate();
  }
  // @@protoc_insertion_point(field_set_allocated:thread_info_ppc64.vrstate)
}

// optional .user_ppc64_vsxstate_entry vsxstate = 5;
inline bool thread_info_ppc64::has_vsxstate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void thread_info_ppc64::set_has_vsxstate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void thread_info_ppc64::clear_has_vsxstate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void thread_info_ppc64::clear_vsxstate() {
  if (vsxstate_ != NULL) vsxstate_->::user_ppc64_vsxstate_entry::Clear();
  clear_has_vsxstate();
}
inline const ::user_ppc64_vsxstate_entry& thread_info_ppc64::vsxstate() const {
  // @@protoc_insertion_point(field_get:thread_info_ppc64.vsxstate)
  return vsxstate_ != NULL ? *vsxstate_ : *default_instance_->vsxstate_;
}
inline ::user_ppc64_vsxstate_entry* thread_info_ppc64::mutable_vsxstate() {
  set_has_vsxstate();
  if (vsxstate_ == NULL) vsxstate_ = new ::user_ppc64_vsxstate_entry;
  // @@protoc_insertion_point(field_mutable:thread_info_ppc64.vsxstate)
  return vsxstate_;
}
inline ::user_ppc64_vsxstate_entry* thread_info_ppc64::release_vsxstate() {
  clear_has_vsxstate();
  ::user_ppc64_vsxstate_entry* temp = vsxstate_;
  vsxstate_ = NULL;
  return temp;
}
inline void thread_info_ppc64::set_allocated_vsxstate(::user_ppc64_vsxstate_entry* vsxstate) {
  delete vsxstate_;
  vsxstate_ = vsxstate;
  if (vsxstate) {
    set_has_vsxstate();
  } else {
    clear_has_vsxstate();
  }
  // @@protoc_insertion_point(field_set_allocated:thread_info_ppc64.vsxstate)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_core_2dppc64_2eproto__INCLUDED
