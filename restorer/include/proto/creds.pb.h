// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: creds.proto

#ifndef PROTOBUF_creds_2eproto__INCLUDED
#define PROTOBUF_creds_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_creds_2eproto();
void protobuf_AssignDesc_creds_2eproto();
void protobuf_ShutdownFile_creds_2eproto();

class creds_entry;

// ===================================================================

class creds_entry : public ::google::protobuf::Message {
 public:
  creds_entry();
  virtual ~creds_entry();

  creds_entry(const creds_entry& from);

  inline creds_entry& operator=(const creds_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const creds_entry& default_instance();

  void Swap(creds_entry* other);

  // implements Message ----------------------------------------------

  creds_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const creds_entry& from);
  void MergeFrom(const creds_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 gid = 2;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 2;
  inline ::google::protobuf::uint32 gid() const;
  inline void set_gid(::google::protobuf::uint32 value);

  // required uint32 euid = 3;
  inline bool has_euid() const;
  inline void clear_euid();
  static const int kEuidFieldNumber = 3;
  inline ::google::protobuf::uint32 euid() const;
  inline void set_euid(::google::protobuf::uint32 value);

  // required uint32 egid = 4;
  inline bool has_egid() const;
  inline void clear_egid();
  static const int kEgidFieldNumber = 4;
  inline ::google::protobuf::uint32 egid() const;
  inline void set_egid(::google::protobuf::uint32 value);

  // required uint32 suid = 5;
  inline bool has_suid() const;
  inline void clear_suid();
  static const int kSuidFieldNumber = 5;
  inline ::google::protobuf::uint32 suid() const;
  inline void set_suid(::google::protobuf::uint32 value);

  // required uint32 sgid = 6;
  inline bool has_sgid() const;
  inline void clear_sgid();
  static const int kSgidFieldNumber = 6;
  inline ::google::protobuf::uint32 sgid() const;
  inline void set_sgid(::google::protobuf::uint32 value);

  // required uint32 fsuid = 7;
  inline bool has_fsuid() const;
  inline void clear_fsuid();
  static const int kFsuidFieldNumber = 7;
  inline ::google::protobuf::uint32 fsuid() const;
  inline void set_fsuid(::google::protobuf::uint32 value);

  // required uint32 fsgid = 8;
  inline bool has_fsgid() const;
  inline void clear_fsgid();
  static const int kFsgidFieldNumber = 8;
  inline ::google::protobuf::uint32 fsgid() const;
  inline void set_fsgid(::google::protobuf::uint32 value);

  // repeated uint32 cap_inh = 9;
  inline int cap_inh_size() const;
  inline void clear_cap_inh();
  static const int kCapInhFieldNumber = 9;
  inline ::google::protobuf::uint32 cap_inh(int index) const;
  inline void set_cap_inh(int index, ::google::protobuf::uint32 value);
  inline void add_cap_inh(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cap_inh() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cap_inh();

  // repeated uint32 cap_prm = 10;
  inline int cap_prm_size() const;
  inline void clear_cap_prm();
  static const int kCapPrmFieldNumber = 10;
  inline ::google::protobuf::uint32 cap_prm(int index) const;
  inline void set_cap_prm(int index, ::google::protobuf::uint32 value);
  inline void add_cap_prm(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cap_prm() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cap_prm();

  // repeated uint32 cap_eff = 11;
  inline int cap_eff_size() const;
  inline void clear_cap_eff();
  static const int kCapEffFieldNumber = 11;
  inline ::google::protobuf::uint32 cap_eff(int index) const;
  inline void set_cap_eff(int index, ::google::protobuf::uint32 value);
  inline void add_cap_eff(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cap_eff() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cap_eff();

  // repeated uint32 cap_bnd = 12;
  inline int cap_bnd_size() const;
  inline void clear_cap_bnd();
  static const int kCapBndFieldNumber = 12;
  inline ::google::protobuf::uint32 cap_bnd(int index) const;
  inline void set_cap_bnd(int index, ::google::protobuf::uint32 value);
  inline void add_cap_bnd(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cap_bnd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cap_bnd();

  // required uint32 secbits = 13;
  inline bool has_secbits() const;
  inline void clear_secbits();
  static const int kSecbitsFieldNumber = 13;
  inline ::google::protobuf::uint32 secbits() const;
  inline void set_secbits(::google::protobuf::uint32 value);

  // repeated uint32 groups = 14;
  inline int groups_size() const;
  inline void clear_groups();
  static const int kGroupsFieldNumber = 14;
  inline ::google::protobuf::uint32 groups(int index) const;
  inline void set_groups(int index, ::google::protobuf::uint32 value);
  inline void add_groups(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      groups() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_groups();

  // optional string lsm_profile = 15;
  inline bool has_lsm_profile() const;
  inline void clear_lsm_profile();
  static const int kLsmProfileFieldNumber = 15;
  inline const ::std::string& lsm_profile() const;
  inline void set_lsm_profile(const ::std::string& value);
  inline void set_lsm_profile(const char* value);
  inline void set_lsm_profile(const char* value, size_t size);
  inline ::std::string* mutable_lsm_profile();
  inline ::std::string* release_lsm_profile();
  inline void set_allocated_lsm_profile(::std::string* lsm_profile);

  // @@protoc_insertion_point(class_scope:creds_entry)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_euid();
  inline void clear_has_euid();
  inline void set_has_egid();
  inline void clear_has_egid();
  inline void set_has_suid();
  inline void clear_has_suid();
  inline void set_has_sgid();
  inline void clear_has_sgid();
  inline void set_has_fsuid();
  inline void clear_has_fsuid();
  inline void set_has_fsgid();
  inline void clear_has_fsgid();
  inline void set_has_secbits();
  inline void clear_has_secbits();
  inline void set_has_lsm_profile();
  inline void clear_has_lsm_profile();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 gid_;
  ::google::protobuf::uint32 euid_;
  ::google::protobuf::uint32 egid_;
  ::google::protobuf::uint32 suid_;
  ::google::protobuf::uint32 sgid_;
  ::google::protobuf::uint32 fsuid_;
  ::google::protobuf::uint32 fsgid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cap_inh_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cap_prm_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cap_eff_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cap_bnd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > groups_;
  ::std::string* lsm_profile_;
  ::google::protobuf::uint32 secbits_;
  friend void  protobuf_AddDesc_creds_2eproto();
  friend void protobuf_AssignDesc_creds_2eproto();
  friend void protobuf_ShutdownFile_creds_2eproto();

  void InitAsDefaultInstance();
  static creds_entry* default_instance_;
};
// ===================================================================


// ===================================================================

// creds_entry

// required uint32 uid = 1;
inline bool creds_entry::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void creds_entry::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void creds_entry::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void creds_entry::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 creds_entry::uid() const {
  // @@protoc_insertion_point(field_get:creds_entry.uid)
  return uid_;
}
inline void creds_entry::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:creds_entry.uid)
}

// required uint32 gid = 2;
inline bool creds_entry::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void creds_entry::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void creds_entry::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void creds_entry::clear_gid() {
  gid_ = 0u;
  clear_has_gid();
}
inline ::google::protobuf::uint32 creds_entry::gid() const {
  // @@protoc_insertion_point(field_get:creds_entry.gid)
  return gid_;
}
inline void creds_entry::set_gid(::google::protobuf::uint32 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:creds_entry.gid)
}

// required uint32 euid = 3;
inline bool creds_entry::has_euid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void creds_entry::set_has_euid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void creds_entry::clear_has_euid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void creds_entry::clear_euid() {
  euid_ = 0u;
  clear_has_euid();
}
inline ::google::protobuf::uint32 creds_entry::euid() const {
  // @@protoc_insertion_point(field_get:creds_entry.euid)
  return euid_;
}
inline void creds_entry::set_euid(::google::protobuf::uint32 value) {
  set_has_euid();
  euid_ = value;
  // @@protoc_insertion_point(field_set:creds_entry.euid)
}

// required uint32 egid = 4;
inline bool creds_entry::has_egid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void creds_entry::set_has_egid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void creds_entry::clear_has_egid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void creds_entry::clear_egid() {
  egid_ = 0u;
  clear_has_egid();
}
inline ::google::protobuf::uint32 creds_entry::egid() const {
  // @@protoc_insertion_point(field_get:creds_entry.egid)
  return egid_;
}
inline void creds_entry::set_egid(::google::protobuf::uint32 value) {
  set_has_egid();
  egid_ = value;
  // @@protoc_insertion_point(field_set:creds_entry.egid)
}

// required uint32 suid = 5;
inline bool creds_entry::has_suid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void creds_entry::set_has_suid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void creds_entry::clear_has_suid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void creds_entry::clear_suid() {
  suid_ = 0u;
  clear_has_suid();
}
inline ::google::protobuf::uint32 creds_entry::suid() const {
  // @@protoc_insertion_point(field_get:creds_entry.suid)
  return suid_;
}
inline void creds_entry::set_suid(::google::protobuf::uint32 value) {
  set_has_suid();
  suid_ = value;
  // @@protoc_insertion_point(field_set:creds_entry.suid)
}

// required uint32 sgid = 6;
inline bool creds_entry::has_sgid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void creds_entry::set_has_sgid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void creds_entry::clear_has_sgid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void creds_entry::clear_sgid() {
  sgid_ = 0u;
  clear_has_sgid();
}
inline ::google::protobuf::uint32 creds_entry::sgid() const {
  // @@protoc_insertion_point(field_get:creds_entry.sgid)
  return sgid_;
}
inline void creds_entry::set_sgid(::google::protobuf::uint32 value) {
  set_has_sgid();
  sgid_ = value;
  // @@protoc_insertion_point(field_set:creds_entry.sgid)
}

// required uint32 fsuid = 7;
inline bool creds_entry::has_fsuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void creds_entry::set_has_fsuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void creds_entry::clear_has_fsuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void creds_entry::clear_fsuid() {
  fsuid_ = 0u;
  clear_has_fsuid();
}
inline ::google::protobuf::uint32 creds_entry::fsuid() const {
  // @@protoc_insertion_point(field_get:creds_entry.fsuid)
  return fsuid_;
}
inline void creds_entry::set_fsuid(::google::protobuf::uint32 value) {
  set_has_fsuid();
  fsuid_ = value;
  // @@protoc_insertion_point(field_set:creds_entry.fsuid)
}

// required uint32 fsgid = 8;
inline bool creds_entry::has_fsgid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void creds_entry::set_has_fsgid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void creds_entry::clear_has_fsgid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void creds_entry::clear_fsgid() {
  fsgid_ = 0u;
  clear_has_fsgid();
}
inline ::google::protobuf::uint32 creds_entry::fsgid() const {
  // @@protoc_insertion_point(field_get:creds_entry.fsgid)
  return fsgid_;
}
inline void creds_entry::set_fsgid(::google::protobuf::uint32 value) {
  set_has_fsgid();
  fsgid_ = value;
  // @@protoc_insertion_point(field_set:creds_entry.fsgid)
}

// repeated uint32 cap_inh = 9;
inline int creds_entry::cap_inh_size() const {
  return cap_inh_.size();
}
inline void creds_entry::clear_cap_inh() {
  cap_inh_.Clear();
}
inline ::google::protobuf::uint32 creds_entry::cap_inh(int index) const {
  // @@protoc_insertion_point(field_get:creds_entry.cap_inh)
  return cap_inh_.Get(index);
}
inline void creds_entry::set_cap_inh(int index, ::google::protobuf::uint32 value) {
  cap_inh_.Set(index, value);
  // @@protoc_insertion_point(field_set:creds_entry.cap_inh)
}
inline void creds_entry::add_cap_inh(::google::protobuf::uint32 value) {
  cap_inh_.Add(value);
  // @@protoc_insertion_point(field_add:creds_entry.cap_inh)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
creds_entry::cap_inh() const {
  // @@protoc_insertion_point(field_list:creds_entry.cap_inh)
  return cap_inh_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
creds_entry::mutable_cap_inh() {
  // @@protoc_insertion_point(field_mutable_list:creds_entry.cap_inh)
  return &cap_inh_;
}

// repeated uint32 cap_prm = 10;
inline int creds_entry::cap_prm_size() const {
  return cap_prm_.size();
}
inline void creds_entry::clear_cap_prm() {
  cap_prm_.Clear();
}
inline ::google::protobuf::uint32 creds_entry::cap_prm(int index) const {
  // @@protoc_insertion_point(field_get:creds_entry.cap_prm)
  return cap_prm_.Get(index);
}
inline void creds_entry::set_cap_prm(int index, ::google::protobuf::uint32 value) {
  cap_prm_.Set(index, value);
  // @@protoc_insertion_point(field_set:creds_entry.cap_prm)
}
inline void creds_entry::add_cap_prm(::google::protobuf::uint32 value) {
  cap_prm_.Add(value);
  // @@protoc_insertion_point(field_add:creds_entry.cap_prm)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
creds_entry::cap_prm() const {
  // @@protoc_insertion_point(field_list:creds_entry.cap_prm)
  return cap_prm_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
creds_entry::mutable_cap_prm() {
  // @@protoc_insertion_point(field_mutable_list:creds_entry.cap_prm)
  return &cap_prm_;
}

// repeated uint32 cap_eff = 11;
inline int creds_entry::cap_eff_size() const {
  return cap_eff_.size();
}
inline void creds_entry::clear_cap_eff() {
  cap_eff_.Clear();
}
inline ::google::protobuf::uint32 creds_entry::cap_eff(int index) const {
  // @@protoc_insertion_point(field_get:creds_entry.cap_eff)
  return cap_eff_.Get(index);
}
inline void creds_entry::set_cap_eff(int index, ::google::protobuf::uint32 value) {
  cap_eff_.Set(index, value);
  // @@protoc_insertion_point(field_set:creds_entry.cap_eff)
}
inline void creds_entry::add_cap_eff(::google::protobuf::uint32 value) {
  cap_eff_.Add(value);
  // @@protoc_insertion_point(field_add:creds_entry.cap_eff)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
creds_entry::cap_eff() const {
  // @@protoc_insertion_point(field_list:creds_entry.cap_eff)
  return cap_eff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
creds_entry::mutable_cap_eff() {
  // @@protoc_insertion_point(field_mutable_list:creds_entry.cap_eff)
  return &cap_eff_;
}

// repeated uint32 cap_bnd = 12;
inline int creds_entry::cap_bnd_size() const {
  return cap_bnd_.size();
}
inline void creds_entry::clear_cap_bnd() {
  cap_bnd_.Clear();
}
inline ::google::protobuf::uint32 creds_entry::cap_bnd(int index) const {
  // @@protoc_insertion_point(field_get:creds_entry.cap_bnd)
  return cap_bnd_.Get(index);
}
inline void creds_entry::set_cap_bnd(int index, ::google::protobuf::uint32 value) {
  cap_bnd_.Set(index, value);
  // @@protoc_insertion_point(field_set:creds_entry.cap_bnd)
}
inline void creds_entry::add_cap_bnd(::google::protobuf::uint32 value) {
  cap_bnd_.Add(value);
  // @@protoc_insertion_point(field_add:creds_entry.cap_bnd)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
creds_entry::cap_bnd() const {
  // @@protoc_insertion_point(field_list:creds_entry.cap_bnd)
  return cap_bnd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
creds_entry::mutable_cap_bnd() {
  // @@protoc_insertion_point(field_mutable_list:creds_entry.cap_bnd)
  return &cap_bnd_;
}

// required uint32 secbits = 13;
inline bool creds_entry::has_secbits() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void creds_entry::set_has_secbits() {
  _has_bits_[0] |= 0x00001000u;
}
inline void creds_entry::clear_has_secbits() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void creds_entry::clear_secbits() {
  secbits_ = 0u;
  clear_has_secbits();
}
inline ::google::protobuf::uint32 creds_entry::secbits() const {
  // @@protoc_insertion_point(field_get:creds_entry.secbits)
  return secbits_;
}
inline void creds_entry::set_secbits(::google::protobuf::uint32 value) {
  set_has_secbits();
  secbits_ = value;
  // @@protoc_insertion_point(field_set:creds_entry.secbits)
}

// repeated uint32 groups = 14;
inline int creds_entry::groups_size() const {
  return groups_.size();
}
inline void creds_entry::clear_groups() {
  groups_.Clear();
}
inline ::google::protobuf::uint32 creds_entry::groups(int index) const {
  // @@protoc_insertion_point(field_get:creds_entry.groups)
  return groups_.Get(index);
}
inline void creds_entry::set_groups(int index, ::google::protobuf::uint32 value) {
  groups_.Set(index, value);
  // @@protoc_insertion_point(field_set:creds_entry.groups)
}
inline void creds_entry::add_groups(::google::protobuf::uint32 value) {
  groups_.Add(value);
  // @@protoc_insertion_point(field_add:creds_entry.groups)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
creds_entry::groups() const {
  // @@protoc_insertion_point(field_list:creds_entry.groups)
  return groups_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
creds_entry::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:creds_entry.groups)
  return &groups_;
}

// optional string lsm_profile = 15;
inline bool creds_entry::has_lsm_profile() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void creds_entry::set_has_lsm_profile() {
  _has_bits_[0] |= 0x00004000u;
}
inline void creds_entry::clear_has_lsm_profile() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void creds_entry::clear_lsm_profile() {
  if (lsm_profile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lsm_profile_->clear();
  }
  clear_has_lsm_profile();
}
inline const ::std::string& creds_entry::lsm_profile() const {
  // @@protoc_insertion_point(field_get:creds_entry.lsm_profile)
  return *lsm_profile_;
}
inline void creds_entry::set_lsm_profile(const ::std::string& value) {
  set_has_lsm_profile();
  if (lsm_profile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lsm_profile_ = new ::std::string;
  }
  lsm_profile_->assign(value);
  // @@protoc_insertion_point(field_set:creds_entry.lsm_profile)
}
inline void creds_entry::set_lsm_profile(const char* value) {
  set_has_lsm_profile();
  if (lsm_profile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lsm_profile_ = new ::std::string;
  }
  lsm_profile_->assign(value);
  // @@protoc_insertion_point(field_set_char:creds_entry.lsm_profile)
}
inline void creds_entry::set_lsm_profile(const char* value, size_t size) {
  set_has_lsm_profile();
  if (lsm_profile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lsm_profile_ = new ::std::string;
  }
  lsm_profile_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:creds_entry.lsm_profile)
}
inline ::std::string* creds_entry::mutable_lsm_profile() {
  set_has_lsm_profile();
  if (lsm_profile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lsm_profile_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:creds_entry.lsm_profile)
  return lsm_profile_;
}
inline ::std::string* creds_entry::release_lsm_profile() {
  clear_has_lsm_profile();
  if (lsm_profile_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lsm_profile_;
    lsm_profile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void creds_entry::set_allocated_lsm_profile(::std::string* lsm_profile) {
  if (lsm_profile_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lsm_profile_;
  }
  if (lsm_profile) {
    set_has_lsm_profile();
    lsm_profile_ = lsm_profile;
  } else {
    clear_has_lsm_profile();
    lsm_profile_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:creds_entry.lsm_profile)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_creds_2eproto__INCLUDED
