// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: timer.proto

#ifndef PROTOBUF_timer_2eproto__INCLUDED
#define PROTOBUF_timer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_timer_2eproto();
void protobuf_AssignDesc_timer_2eproto();
void protobuf_ShutdownFile_timer_2eproto();

class itimer_entry;
class posix_timer_entry;
class task_timers_entry;

// ===================================================================

class itimer_entry : public ::google::protobuf::Message {
 public:
  itimer_entry();
  virtual ~itimer_entry();

  itimer_entry(const itimer_entry& from);

  inline itimer_entry& operator=(const itimer_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const itimer_entry& default_instance();

  void Swap(itimer_entry* other);

  // implements Message ----------------------------------------------

  itimer_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const itimer_entry& from);
  void MergeFrom(const itimer_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 isec = 1;
  inline bool has_isec() const;
  inline void clear_isec();
  static const int kIsecFieldNumber = 1;
  inline ::google::protobuf::uint64 isec() const;
  inline void set_isec(::google::protobuf::uint64 value);

  // required uint64 iusec = 2;
  inline bool has_iusec() const;
  inline void clear_iusec();
  static const int kIusecFieldNumber = 2;
  inline ::google::protobuf::uint64 iusec() const;
  inline void set_iusec(::google::protobuf::uint64 value);

  // required uint64 vsec = 3;
  inline bool has_vsec() const;
  inline void clear_vsec();
  static const int kVsecFieldNumber = 3;
  inline ::google::protobuf::uint64 vsec() const;
  inline void set_vsec(::google::protobuf::uint64 value);

  // required uint64 vusec = 4;
  inline bool has_vusec() const;
  inline void clear_vusec();
  static const int kVusecFieldNumber = 4;
  inline ::google::protobuf::uint64 vusec() const;
  inline void set_vusec(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:itimer_entry)
 private:
  inline void set_has_isec();
  inline void clear_has_isec();
  inline void set_has_iusec();
  inline void clear_has_iusec();
  inline void set_has_vsec();
  inline void clear_has_vsec();
  inline void set_has_vusec();
  inline void clear_has_vusec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 isec_;
  ::google::protobuf::uint64 iusec_;
  ::google::protobuf::uint64 vsec_;
  ::google::protobuf::uint64 vusec_;
  friend void  protobuf_AddDesc_timer_2eproto();
  friend void protobuf_AssignDesc_timer_2eproto();
  friend void protobuf_ShutdownFile_timer_2eproto();

  void InitAsDefaultInstance();
  static itimer_entry* default_instance_;
};
// -------------------------------------------------------------------

class posix_timer_entry : public ::google::protobuf::Message {
 public:
  posix_timer_entry();
  virtual ~posix_timer_entry();

  posix_timer_entry(const posix_timer_entry& from);

  inline posix_timer_entry& operator=(const posix_timer_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const posix_timer_entry& default_instance();

  void Swap(posix_timer_entry* other);

  // implements Message ----------------------------------------------

  posix_timer_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const posix_timer_entry& from);
  void MergeFrom(const posix_timer_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 it_id = 1;
  inline bool has_it_id() const;
  inline void clear_it_id();
  static const int kItIdFieldNumber = 1;
  inline ::google::protobuf::uint32 it_id() const;
  inline void set_it_id(::google::protobuf::uint32 value);

  // required uint32 clock_id = 2;
  inline bool has_clock_id() const;
  inline void clear_clock_id();
  static const int kClockIdFieldNumber = 2;
  inline ::google::protobuf::uint32 clock_id() const;
  inline void set_clock_id(::google::protobuf::uint32 value);

  // required uint32 si_signo = 3;
  inline bool has_si_signo() const;
  inline void clear_si_signo();
  static const int kSiSignoFieldNumber = 3;
  inline ::google::protobuf::uint32 si_signo() const;
  inline void set_si_signo(::google::protobuf::uint32 value);

  // required uint32 it_sigev_notify = 4;
  inline bool has_it_sigev_notify() const;
  inline void clear_it_sigev_notify();
  static const int kItSigevNotifyFieldNumber = 4;
  inline ::google::protobuf::uint32 it_sigev_notify() const;
  inline void set_it_sigev_notify(::google::protobuf::uint32 value);

  // required uint64 sival_ptr = 5;
  inline bool has_sival_ptr() const;
  inline void clear_sival_ptr();
  static const int kSivalPtrFieldNumber = 5;
  inline ::google::protobuf::uint64 sival_ptr() const;
  inline void set_sival_ptr(::google::protobuf::uint64 value);

  // required uint32 overrun = 6;
  inline bool has_overrun() const;
  inline void clear_overrun();
  static const int kOverrunFieldNumber = 6;
  inline ::google::protobuf::uint32 overrun() const;
  inline void set_overrun(::google::protobuf::uint32 value);

  // required uint64 isec = 7;
  inline bool has_isec() const;
  inline void clear_isec();
  static const int kIsecFieldNumber = 7;
  inline ::google::protobuf::uint64 isec() const;
  inline void set_isec(::google::protobuf::uint64 value);

  // required uint64 insec = 8;
  inline bool has_insec() const;
  inline void clear_insec();
  static const int kInsecFieldNumber = 8;
  inline ::google::protobuf::uint64 insec() const;
  inline void set_insec(::google::protobuf::uint64 value);

  // required uint64 vsec = 9;
  inline bool has_vsec() const;
  inline void clear_vsec();
  static const int kVsecFieldNumber = 9;
  inline ::google::protobuf::uint64 vsec() const;
  inline void set_vsec(::google::protobuf::uint64 value);

  // required uint64 vnsec = 10;
  inline bool has_vnsec() const;
  inline void clear_vnsec();
  static const int kVnsecFieldNumber = 10;
  inline ::google::protobuf::uint64 vnsec() const;
  inline void set_vnsec(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:posix_timer_entry)
 private:
  inline void set_has_it_id();
  inline void clear_has_it_id();
  inline void set_has_clock_id();
  inline void clear_has_clock_id();
  inline void set_has_si_signo();
  inline void clear_has_si_signo();
  inline void set_has_it_sigev_notify();
  inline void clear_has_it_sigev_notify();
  inline void set_has_sival_ptr();
  inline void clear_has_sival_ptr();
  inline void set_has_overrun();
  inline void clear_has_overrun();
  inline void set_has_isec();
  inline void clear_has_isec();
  inline void set_has_insec();
  inline void clear_has_insec();
  inline void set_has_vsec();
  inline void clear_has_vsec();
  inline void set_has_vnsec();
  inline void clear_has_vnsec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 it_id_;
  ::google::protobuf::uint32 clock_id_;
  ::google::protobuf::uint32 si_signo_;
  ::google::protobuf::uint32 it_sigev_notify_;
  ::google::protobuf::uint64 sival_ptr_;
  ::google::protobuf::uint64 isec_;
  ::google::protobuf::uint64 insec_;
  ::google::protobuf::uint64 vsec_;
  ::google::protobuf::uint64 vnsec_;
  ::google::protobuf::uint32 overrun_;
  friend void  protobuf_AddDesc_timer_2eproto();
  friend void protobuf_AssignDesc_timer_2eproto();
  friend void protobuf_ShutdownFile_timer_2eproto();

  void InitAsDefaultInstance();
  static posix_timer_entry* default_instance_;
};
// -------------------------------------------------------------------

class task_timers_entry : public ::google::protobuf::Message {
 public:
  task_timers_entry();
  virtual ~task_timers_entry();

  task_timers_entry(const task_timers_entry& from);

  inline task_timers_entry& operator=(const task_timers_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const task_timers_entry& default_instance();

  void Swap(task_timers_entry* other);

  // implements Message ----------------------------------------------

  task_timers_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const task_timers_entry& from);
  void MergeFrom(const task_timers_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .itimer_entry real = 1;
  inline bool has_real() const;
  inline void clear_real();
  static const int kRealFieldNumber = 1;
  inline const ::itimer_entry& real() const;
  inline ::itimer_entry* mutable_real();
  inline ::itimer_entry* release_real();
  inline void set_allocated_real(::itimer_entry* real);

  // required .itimer_entry virt = 2;
  inline bool has_virt() const;
  inline void clear_virt();
  static const int kVirtFieldNumber = 2;
  inline const ::itimer_entry& virt() const;
  inline ::itimer_entry* mutable_virt();
  inline ::itimer_entry* release_virt();
  inline void set_allocated_virt(::itimer_entry* virt);

  // required .itimer_entry prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline const ::itimer_entry& prof() const;
  inline ::itimer_entry* mutable_prof();
  inline ::itimer_entry* release_prof();
  inline void set_allocated_prof(::itimer_entry* prof);

  // repeated .posix_timer_entry posix = 4;
  inline int posix_size() const;
  inline void clear_posix();
  static const int kPosixFieldNumber = 4;
  inline const ::posix_timer_entry& posix(int index) const;
  inline ::posix_timer_entry* mutable_posix(int index);
  inline ::posix_timer_entry* add_posix();
  inline const ::google::protobuf::RepeatedPtrField< ::posix_timer_entry >&
      posix() const;
  inline ::google::protobuf::RepeatedPtrField< ::posix_timer_entry >*
      mutable_posix();

  // @@protoc_insertion_point(class_scope:task_timers_entry)
 private:
  inline void set_has_real();
  inline void clear_has_real();
  inline void set_has_virt();
  inline void clear_has_virt();
  inline void set_has_prof();
  inline void clear_has_prof();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::itimer_entry* real_;
  ::itimer_entry* virt_;
  ::itimer_entry* prof_;
  ::google::protobuf::RepeatedPtrField< ::posix_timer_entry > posix_;
  friend void  protobuf_AddDesc_timer_2eproto();
  friend void protobuf_AssignDesc_timer_2eproto();
  friend void protobuf_ShutdownFile_timer_2eproto();

  void InitAsDefaultInstance();
  static task_timers_entry* default_instance_;
};
// ===================================================================


// ===================================================================

// itimer_entry

// required uint64 isec = 1;
inline bool itimer_entry::has_isec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void itimer_entry::set_has_isec() {
  _has_bits_[0] |= 0x00000001u;
}
inline void itimer_entry::clear_has_isec() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void itimer_entry::clear_isec() {
  isec_ = GOOGLE_ULONGLONG(0);
  clear_has_isec();
}
inline ::google::protobuf::uint64 itimer_entry::isec() const {
  // @@protoc_insertion_point(field_get:itimer_entry.isec)
  return isec_;
}
inline void itimer_entry::set_isec(::google::protobuf::uint64 value) {
  set_has_isec();
  isec_ = value;
  // @@protoc_insertion_point(field_set:itimer_entry.isec)
}

// required uint64 iusec = 2;
inline bool itimer_entry::has_iusec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void itimer_entry::set_has_iusec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void itimer_entry::clear_has_iusec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void itimer_entry::clear_iusec() {
  iusec_ = GOOGLE_ULONGLONG(0);
  clear_has_iusec();
}
inline ::google::protobuf::uint64 itimer_entry::iusec() const {
  // @@protoc_insertion_point(field_get:itimer_entry.iusec)
  return iusec_;
}
inline void itimer_entry::set_iusec(::google::protobuf::uint64 value) {
  set_has_iusec();
  iusec_ = value;
  // @@protoc_insertion_point(field_set:itimer_entry.iusec)
}

// required uint64 vsec = 3;
inline bool itimer_entry::has_vsec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void itimer_entry::set_has_vsec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void itimer_entry::clear_has_vsec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void itimer_entry::clear_vsec() {
  vsec_ = GOOGLE_ULONGLONG(0);
  clear_has_vsec();
}
inline ::google::protobuf::uint64 itimer_entry::vsec() const {
  // @@protoc_insertion_point(field_get:itimer_entry.vsec)
  return vsec_;
}
inline void itimer_entry::set_vsec(::google::protobuf::uint64 value) {
  set_has_vsec();
  vsec_ = value;
  // @@protoc_insertion_point(field_set:itimer_entry.vsec)
}

// required uint64 vusec = 4;
inline bool itimer_entry::has_vusec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void itimer_entry::set_has_vusec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void itimer_entry::clear_has_vusec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void itimer_entry::clear_vusec() {
  vusec_ = GOOGLE_ULONGLONG(0);
  clear_has_vusec();
}
inline ::google::protobuf::uint64 itimer_entry::vusec() const {
  // @@protoc_insertion_point(field_get:itimer_entry.vusec)
  return vusec_;
}
inline void itimer_entry::set_vusec(::google::protobuf::uint64 value) {
  set_has_vusec();
  vusec_ = value;
  // @@protoc_insertion_point(field_set:itimer_entry.vusec)
}

// -------------------------------------------------------------------

// posix_timer_entry

// required uint32 it_id = 1;
inline bool posix_timer_entry::has_it_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void posix_timer_entry::set_has_it_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void posix_timer_entry::clear_has_it_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void posix_timer_entry::clear_it_id() {
  it_id_ = 0u;
  clear_has_it_id();
}
inline ::google::protobuf::uint32 posix_timer_entry::it_id() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.it_id)
  return it_id_;
}
inline void posix_timer_entry::set_it_id(::google::protobuf::uint32 value) {
  set_has_it_id();
  it_id_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.it_id)
}

// required uint32 clock_id = 2;
inline bool posix_timer_entry::has_clock_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void posix_timer_entry::set_has_clock_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void posix_timer_entry::clear_has_clock_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void posix_timer_entry::clear_clock_id() {
  clock_id_ = 0u;
  clear_has_clock_id();
}
inline ::google::protobuf::uint32 posix_timer_entry::clock_id() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.clock_id)
  return clock_id_;
}
inline void posix_timer_entry::set_clock_id(::google::protobuf::uint32 value) {
  set_has_clock_id();
  clock_id_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.clock_id)
}

// required uint32 si_signo = 3;
inline bool posix_timer_entry::has_si_signo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void posix_timer_entry::set_has_si_signo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void posix_timer_entry::clear_has_si_signo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void posix_timer_entry::clear_si_signo() {
  si_signo_ = 0u;
  clear_has_si_signo();
}
inline ::google::protobuf::uint32 posix_timer_entry::si_signo() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.si_signo)
  return si_signo_;
}
inline void posix_timer_entry::set_si_signo(::google::protobuf::uint32 value) {
  set_has_si_signo();
  si_signo_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.si_signo)
}

// required uint32 it_sigev_notify = 4;
inline bool posix_timer_entry::has_it_sigev_notify() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void posix_timer_entry::set_has_it_sigev_notify() {
  _has_bits_[0] |= 0x00000008u;
}
inline void posix_timer_entry::clear_has_it_sigev_notify() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void posix_timer_entry::clear_it_sigev_notify() {
  it_sigev_notify_ = 0u;
  clear_has_it_sigev_notify();
}
inline ::google::protobuf::uint32 posix_timer_entry::it_sigev_notify() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.it_sigev_notify)
  return it_sigev_notify_;
}
inline void posix_timer_entry::set_it_sigev_notify(::google::protobuf::uint32 value) {
  set_has_it_sigev_notify();
  it_sigev_notify_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.it_sigev_notify)
}

// required uint64 sival_ptr = 5;
inline bool posix_timer_entry::has_sival_ptr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void posix_timer_entry::set_has_sival_ptr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void posix_timer_entry::clear_has_sival_ptr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void posix_timer_entry::clear_sival_ptr() {
  sival_ptr_ = GOOGLE_ULONGLONG(0);
  clear_has_sival_ptr();
}
inline ::google::protobuf::uint64 posix_timer_entry::sival_ptr() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.sival_ptr)
  return sival_ptr_;
}
inline void posix_timer_entry::set_sival_ptr(::google::protobuf::uint64 value) {
  set_has_sival_ptr();
  sival_ptr_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.sival_ptr)
}

// required uint32 overrun = 6;
inline bool posix_timer_entry::has_overrun() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void posix_timer_entry::set_has_overrun() {
  _has_bits_[0] |= 0x00000020u;
}
inline void posix_timer_entry::clear_has_overrun() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void posix_timer_entry::clear_overrun() {
  overrun_ = 0u;
  clear_has_overrun();
}
inline ::google::protobuf::uint32 posix_timer_entry::overrun() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.overrun)
  return overrun_;
}
inline void posix_timer_entry::set_overrun(::google::protobuf::uint32 value) {
  set_has_overrun();
  overrun_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.overrun)
}

// required uint64 isec = 7;
inline bool posix_timer_entry::has_isec() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void posix_timer_entry::set_has_isec() {
  _has_bits_[0] |= 0x00000040u;
}
inline void posix_timer_entry::clear_has_isec() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void posix_timer_entry::clear_isec() {
  isec_ = GOOGLE_ULONGLONG(0);
  clear_has_isec();
}
inline ::google::protobuf::uint64 posix_timer_entry::isec() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.isec)
  return isec_;
}
inline void posix_timer_entry::set_isec(::google::protobuf::uint64 value) {
  set_has_isec();
  isec_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.isec)
}

// required uint64 insec = 8;
inline bool posix_timer_entry::has_insec() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void posix_timer_entry::set_has_insec() {
  _has_bits_[0] |= 0x00000080u;
}
inline void posix_timer_entry::clear_has_insec() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void posix_timer_entry::clear_insec() {
  insec_ = GOOGLE_ULONGLONG(0);
  clear_has_insec();
}
inline ::google::protobuf::uint64 posix_timer_entry::insec() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.insec)
  return insec_;
}
inline void posix_timer_entry::set_insec(::google::protobuf::uint64 value) {
  set_has_insec();
  insec_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.insec)
}

// required uint64 vsec = 9;
inline bool posix_timer_entry::has_vsec() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void posix_timer_entry::set_has_vsec() {
  _has_bits_[0] |= 0x00000100u;
}
inline void posix_timer_entry::clear_has_vsec() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void posix_timer_entry::clear_vsec() {
  vsec_ = GOOGLE_ULONGLONG(0);
  clear_has_vsec();
}
inline ::google::protobuf::uint64 posix_timer_entry::vsec() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.vsec)
  return vsec_;
}
inline void posix_timer_entry::set_vsec(::google::protobuf::uint64 value) {
  set_has_vsec();
  vsec_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.vsec)
}

// required uint64 vnsec = 10;
inline bool posix_timer_entry::has_vnsec() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void posix_timer_entry::set_has_vnsec() {
  _has_bits_[0] |= 0x00000200u;
}
inline void posix_timer_entry::clear_has_vnsec() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void posix_timer_entry::clear_vnsec() {
  vnsec_ = GOOGLE_ULONGLONG(0);
  clear_has_vnsec();
}
inline ::google::protobuf::uint64 posix_timer_entry::vnsec() const {
  // @@protoc_insertion_point(field_get:posix_timer_entry.vnsec)
  return vnsec_;
}
inline void posix_timer_entry::set_vnsec(::google::protobuf::uint64 value) {
  set_has_vnsec();
  vnsec_ = value;
  // @@protoc_insertion_point(field_set:posix_timer_entry.vnsec)
}

// -------------------------------------------------------------------

// task_timers_entry

// required .itimer_entry real = 1;
inline bool task_timers_entry::has_real() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void task_timers_entry::set_has_real() {
  _has_bits_[0] |= 0x00000001u;
}
inline void task_timers_entry::clear_has_real() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void task_timers_entry::clear_real() {
  if (real_ != NULL) real_->::itimer_entry::Clear();
  clear_has_real();
}
inline const ::itimer_entry& task_timers_entry::real() const {
  // @@protoc_insertion_point(field_get:task_timers_entry.real)
  return real_ != NULL ? *real_ : *default_instance_->real_;
}
inline ::itimer_entry* task_timers_entry::mutable_real() {
  set_has_real();
  if (real_ == NULL) real_ = new ::itimer_entry;
  // @@protoc_insertion_point(field_mutable:task_timers_entry.real)
  return real_;
}
inline ::itimer_entry* task_timers_entry::release_real() {
  clear_has_real();
  ::itimer_entry* temp = real_;
  real_ = NULL;
  return temp;
}
inline void task_timers_entry::set_allocated_real(::itimer_entry* real) {
  delete real_;
  real_ = real;
  if (real) {
    set_has_real();
  } else {
    clear_has_real();
  }
  // @@protoc_insertion_point(field_set_allocated:task_timers_entry.real)
}

// required .itimer_entry virt = 2;
inline bool task_timers_entry::has_virt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void task_timers_entry::set_has_virt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void task_timers_entry::clear_has_virt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void task_timers_entry::clear_virt() {
  if (virt_ != NULL) virt_->::itimer_entry::Clear();
  clear_has_virt();
}
inline const ::itimer_entry& task_timers_entry::virt() const {
  // @@protoc_insertion_point(field_get:task_timers_entry.virt)
  return virt_ != NULL ? *virt_ : *default_instance_->virt_;
}
inline ::itimer_entry* task_timers_entry::mutable_virt() {
  set_has_virt();
  if (virt_ == NULL) virt_ = new ::itimer_entry;
  // @@protoc_insertion_point(field_mutable:task_timers_entry.virt)
  return virt_;
}
inline ::itimer_entry* task_timers_entry::release_virt() {
  clear_has_virt();
  ::itimer_entry* temp = virt_;
  virt_ = NULL;
  return temp;
}
inline void task_timers_entry::set_allocated_virt(::itimer_entry* virt) {
  delete virt_;
  virt_ = virt;
  if (virt) {
    set_has_virt();
  } else {
    clear_has_virt();
  }
  // @@protoc_insertion_point(field_set_allocated:task_timers_entry.virt)
}

// required .itimer_entry prof = 3;
inline bool task_timers_entry::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void task_timers_entry::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void task_timers_entry::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void task_timers_entry::clear_prof() {
  if (prof_ != NULL) prof_->::itimer_entry::Clear();
  clear_has_prof();
}
inline const ::itimer_entry& task_timers_entry::prof() const {
  // @@protoc_insertion_point(field_get:task_timers_entry.prof)
  return prof_ != NULL ? *prof_ : *default_instance_->prof_;
}
inline ::itimer_entry* task_timers_entry::mutable_prof() {
  set_has_prof();
  if (prof_ == NULL) prof_ = new ::itimer_entry;
  // @@protoc_insertion_point(field_mutable:task_timers_entry.prof)
  return prof_;
}
inline ::itimer_entry* task_timers_entry::release_prof() {
  clear_has_prof();
  ::itimer_entry* temp = prof_;
  prof_ = NULL;
  return temp;
}
inline void task_timers_entry::set_allocated_prof(::itimer_entry* prof) {
  delete prof_;
  prof_ = prof;
  if (prof) {
    set_has_prof();
  } else {
    clear_has_prof();
  }
  // @@protoc_insertion_point(field_set_allocated:task_timers_entry.prof)
}

// repeated .posix_timer_entry posix = 4;
inline int task_timers_entry::posix_size() const {
  return posix_.size();
}
inline void task_timers_entry::clear_posix() {
  posix_.Clear();
}
inline const ::posix_timer_entry& task_timers_entry::posix(int index) const {
  // @@protoc_insertion_point(field_get:task_timers_entry.posix)
  return posix_.Get(index);
}
inline ::posix_timer_entry* task_timers_entry::mutable_posix(int index) {
  // @@protoc_insertion_point(field_mutable:task_timers_entry.posix)
  return posix_.Mutable(index);
}
inline ::posix_timer_entry* task_timers_entry::add_posix() {
  // @@protoc_insertion_point(field_add:task_timers_entry.posix)
  return posix_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::posix_timer_entry >&
task_timers_entry::posix() const {
  // @@protoc_insertion_point(field_list:task_timers_entry.posix)
  return posix_;
}
inline ::google::protobuf::RepeatedPtrField< ::posix_timer_entry >*
task_timers_entry::mutable_posix() {
  // @@protoc_insertion_point(field_mutable_list:task_timers_entry.posix)
  return &posix_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_timer_2eproto__INCLUDED
