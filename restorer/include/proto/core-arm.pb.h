// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core-arm.proto

#ifndef PROTOBUF_core_2darm_2eproto__INCLUDED
#define PROTOBUF_core_2darm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_core_2darm_2eproto();
void protobuf_AssignDesc_core_2darm_2eproto();
void protobuf_ShutdownFile_core_2darm_2eproto();

class user_arm_regs_entry;
class user_arm_vfpstate_entry;
class thread_info_arm;

// ===================================================================

class user_arm_regs_entry : public ::google::protobuf::Message {
 public:
  user_arm_regs_entry();
  virtual ~user_arm_regs_entry();

  user_arm_regs_entry(const user_arm_regs_entry& from);

  inline user_arm_regs_entry& operator=(const user_arm_regs_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_arm_regs_entry& default_instance();

  void Swap(user_arm_regs_entry* other);

  // implements Message ----------------------------------------------

  user_arm_regs_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_arm_regs_entry& from);
  void MergeFrom(const user_arm_regs_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 r0 = 1;
  inline bool has_r0() const;
  inline void clear_r0();
  static const int kR0FieldNumber = 1;
  inline ::google::protobuf::uint32 r0() const;
  inline void set_r0(::google::protobuf::uint32 value);

  // required uint32 r1 = 2;
  inline bool has_r1() const;
  inline void clear_r1();
  static const int kR1FieldNumber = 2;
  inline ::google::protobuf::uint32 r1() const;
  inline void set_r1(::google::protobuf::uint32 value);

  // required uint32 r2 = 3;
  inline bool has_r2() const;
  inline void clear_r2();
  static const int kR2FieldNumber = 3;
  inline ::google::protobuf::uint32 r2() const;
  inline void set_r2(::google::protobuf::uint32 value);

  // required uint32 r3 = 4;
  inline bool has_r3() const;
  inline void clear_r3();
  static const int kR3FieldNumber = 4;
  inline ::google::protobuf::uint32 r3() const;
  inline void set_r3(::google::protobuf::uint32 value);

  // required uint32 r4 = 5;
  inline bool has_r4() const;
  inline void clear_r4();
  static const int kR4FieldNumber = 5;
  inline ::google::protobuf::uint32 r4() const;
  inline void set_r4(::google::protobuf::uint32 value);

  // required uint32 r5 = 6;
  inline bool has_r5() const;
  inline void clear_r5();
  static const int kR5FieldNumber = 6;
  inline ::google::protobuf::uint32 r5() const;
  inline void set_r5(::google::protobuf::uint32 value);

  // required uint32 r6 = 7;
  inline bool has_r6() const;
  inline void clear_r6();
  static const int kR6FieldNumber = 7;
  inline ::google::protobuf::uint32 r6() const;
  inline void set_r6(::google::protobuf::uint32 value);

  // required uint32 r7 = 8;
  inline bool has_r7() const;
  inline void clear_r7();
  static const int kR7FieldNumber = 8;
  inline ::google::protobuf::uint32 r7() const;
  inline void set_r7(::google::protobuf::uint32 value);

  // required uint32 r8 = 9;
  inline bool has_r8() const;
  inline void clear_r8();
  static const int kR8FieldNumber = 9;
  inline ::google::protobuf::uint32 r8() const;
  inline void set_r8(::google::protobuf::uint32 value);

  // required uint32 r9 = 10;
  inline bool has_r9() const;
  inline void clear_r9();
  static const int kR9FieldNumber = 10;
  inline ::google::protobuf::uint32 r9() const;
  inline void set_r9(::google::protobuf::uint32 value);

  // required uint32 r10 = 11;
  inline bool has_r10() const;
  inline void clear_r10();
  static const int kR10FieldNumber = 11;
  inline ::google::protobuf::uint32 r10() const;
  inline void set_r10(::google::protobuf::uint32 value);

  // required uint32 fp = 12;
  inline bool has_fp() const;
  inline void clear_fp();
  static const int kFpFieldNumber = 12;
  inline ::google::protobuf::uint32 fp() const;
  inline void set_fp(::google::protobuf::uint32 value);

  // required uint32 ip = 13;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 13;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);

  // required uint32 sp = 14;
  inline bool has_sp() const;
  inline void clear_sp();
  static const int kSpFieldNumber = 14;
  inline ::google::protobuf::uint32 sp() const;
  inline void set_sp(::google::protobuf::uint32 value);

  // required uint32 lr = 15;
  inline bool has_lr() const;
  inline void clear_lr();
  static const int kLrFieldNumber = 15;
  inline ::google::protobuf::uint32 lr() const;
  inline void set_lr(::google::protobuf::uint32 value);

  // required uint32 pc = 16;
  inline bool has_pc() const;
  inline void clear_pc();
  static const int kPcFieldNumber = 16;
  inline ::google::protobuf::uint32 pc() const;
  inline void set_pc(::google::protobuf::uint32 value);

  // required uint32 cpsr = 17;
  inline bool has_cpsr() const;
  inline void clear_cpsr();
  static const int kCpsrFieldNumber = 17;
  inline ::google::protobuf::uint32 cpsr() const;
  inline void set_cpsr(::google::protobuf::uint32 value);

  // required uint32 orig_r0 = 18;
  inline bool has_orig_r0() const;
  inline void clear_orig_r0();
  static const int kOrigR0FieldNumber = 18;
  inline ::google::protobuf::uint32 orig_r0() const;
  inline void set_orig_r0(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:user_arm_regs_entry)
 private:
  inline void set_has_r0();
  inline void clear_has_r0();
  inline void set_has_r1();
  inline void clear_has_r1();
  inline void set_has_r2();
  inline void clear_has_r2();
  inline void set_has_r3();
  inline void clear_has_r3();
  inline void set_has_r4();
  inline void clear_has_r4();
  inline void set_has_r5();
  inline void clear_has_r5();
  inline void set_has_r6();
  inline void clear_has_r6();
  inline void set_has_r7();
  inline void clear_has_r7();
  inline void set_has_r8();
  inline void clear_has_r8();
  inline void set_has_r9();
  inline void clear_has_r9();
  inline void set_has_r10();
  inline void clear_has_r10();
  inline void set_has_fp();
  inline void clear_has_fp();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_sp();
  inline void clear_has_sp();
  inline void set_has_lr();
  inline void clear_has_lr();
  inline void set_has_pc();
  inline void clear_has_pc();
  inline void set_has_cpsr();
  inline void clear_has_cpsr();
  inline void set_has_orig_r0();
  inline void clear_has_orig_r0();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 r0_;
  ::google::protobuf::uint32 r1_;
  ::google::protobuf::uint32 r2_;
  ::google::protobuf::uint32 r3_;
  ::google::protobuf::uint32 r4_;
  ::google::protobuf::uint32 r5_;
  ::google::protobuf::uint32 r6_;
  ::google::protobuf::uint32 r7_;
  ::google::protobuf::uint32 r8_;
  ::google::protobuf::uint32 r9_;
  ::google::protobuf::uint32 r10_;
  ::google::protobuf::uint32 fp_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 sp_;
  ::google::protobuf::uint32 lr_;
  ::google::protobuf::uint32 pc_;
  ::google::protobuf::uint32 cpsr_;
  ::google::protobuf::uint32 orig_r0_;
  friend void  protobuf_AddDesc_core_2darm_2eproto();
  friend void protobuf_AssignDesc_core_2darm_2eproto();
  friend void protobuf_ShutdownFile_core_2darm_2eproto();

  void InitAsDefaultInstance();
  static user_arm_regs_entry* default_instance_;
};
// -------------------------------------------------------------------

class user_arm_vfpstate_entry : public ::google::protobuf::Message {
 public:
  user_arm_vfpstate_entry();
  virtual ~user_arm_vfpstate_entry();

  user_arm_vfpstate_entry(const user_arm_vfpstate_entry& from);

  inline user_arm_vfpstate_entry& operator=(const user_arm_vfpstate_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_arm_vfpstate_entry& default_instance();

  void Swap(user_arm_vfpstate_entry* other);

  // implements Message ----------------------------------------------

  user_arm_vfpstate_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_arm_vfpstate_entry& from);
  void MergeFrom(const user_arm_vfpstate_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 vfp_regs = 1;
  inline int vfp_regs_size() const;
  inline void clear_vfp_regs();
  static const int kVfpRegsFieldNumber = 1;
  inline ::google::protobuf::uint64 vfp_regs(int index) const;
  inline void set_vfp_regs(int index, ::google::protobuf::uint64 value);
  inline void add_vfp_regs(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      vfp_regs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_vfp_regs();

  // required uint32 fpscr = 2;
  inline bool has_fpscr() const;
  inline void clear_fpscr();
  static const int kFpscrFieldNumber = 2;
  inline ::google::protobuf::uint32 fpscr() const;
  inline void set_fpscr(::google::protobuf::uint32 value);

  // required uint32 fpexc = 3;
  inline bool has_fpexc() const;
  inline void clear_fpexc();
  static const int kFpexcFieldNumber = 3;
  inline ::google::protobuf::uint32 fpexc() const;
  inline void set_fpexc(::google::protobuf::uint32 value);

  // required uint32 fpinst = 4;
  inline bool has_fpinst() const;
  inline void clear_fpinst();
  static const int kFpinstFieldNumber = 4;
  inline ::google::protobuf::uint32 fpinst() const;
  inline void set_fpinst(::google::protobuf::uint32 value);

  // required uint32 fpinst2 = 5;
  inline bool has_fpinst2() const;
  inline void clear_fpinst2();
  static const int kFpinst2FieldNumber = 5;
  inline ::google::protobuf::uint32 fpinst2() const;
  inline void set_fpinst2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:user_arm_vfpstate_entry)
 private:
  inline void set_has_fpscr();
  inline void clear_has_fpscr();
  inline void set_has_fpexc();
  inline void clear_has_fpexc();
  inline void set_has_fpinst();
  inline void clear_has_fpinst();
  inline void set_has_fpinst2();
  inline void clear_has_fpinst2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > vfp_regs_;
  ::google::protobuf::uint32 fpscr_;
  ::google::protobuf::uint32 fpexc_;
  ::google::protobuf::uint32 fpinst_;
  ::google::protobuf::uint32 fpinst2_;
  friend void  protobuf_AddDesc_core_2darm_2eproto();
  friend void protobuf_AssignDesc_core_2darm_2eproto();
  friend void protobuf_ShutdownFile_core_2darm_2eproto();

  void InitAsDefaultInstance();
  static user_arm_vfpstate_entry* default_instance_;
};
// -------------------------------------------------------------------

class thread_info_arm : public ::google::protobuf::Message {
 public:
  thread_info_arm();
  virtual ~thread_info_arm();

  thread_info_arm(const thread_info_arm& from);

  inline thread_info_arm& operator=(const thread_info_arm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const thread_info_arm& default_instance();

  void Swap(thread_info_arm* other);

  // implements Message ----------------------------------------------

  thread_info_arm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const thread_info_arm& from);
  void MergeFrom(const thread_info_arm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 clear_tid_addr = 1;
  inline bool has_clear_tid_addr() const;
  inline void clear_clear_tid_addr();
  static const int kClearTidAddrFieldNumber = 1;
  inline ::google::protobuf::uint64 clear_tid_addr() const;
  inline void set_clear_tid_addr(::google::protobuf::uint64 value);

  // required uint32 tls = 2;
  inline bool has_tls() const;
  inline void clear_tls();
  static const int kTlsFieldNumber = 2;
  inline ::google::protobuf::uint32 tls() const;
  inline void set_tls(::google::protobuf::uint32 value);

  // required .user_arm_regs_entry gpregs = 3;
  inline bool has_gpregs() const;
  inline void clear_gpregs();
  static const int kGpregsFieldNumber = 3;
  inline const ::user_arm_regs_entry& gpregs() const;
  inline ::user_arm_regs_entry* mutable_gpregs();
  inline ::user_arm_regs_entry* release_gpregs();
  inline void set_allocated_gpregs(::user_arm_regs_entry* gpregs);

  // required .user_arm_vfpstate_entry fpstate = 4;
  inline bool has_fpstate() const;
  inline void clear_fpstate();
  static const int kFpstateFieldNumber = 4;
  inline const ::user_arm_vfpstate_entry& fpstate() const;
  inline ::user_arm_vfpstate_entry* mutable_fpstate();
  inline ::user_arm_vfpstate_entry* release_fpstate();
  inline void set_allocated_fpstate(::user_arm_vfpstate_entry* fpstate);

  // @@protoc_insertion_point(class_scope:thread_info_arm)
 private:
  inline void set_has_clear_tid_addr();
  inline void clear_has_clear_tid_addr();
  inline void set_has_tls();
  inline void clear_has_tls();
  inline void set_has_gpregs();
  inline void clear_has_gpregs();
  inline void set_has_fpstate();
  inline void clear_has_fpstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 clear_tid_addr_;
  ::user_arm_regs_entry* gpregs_;
  ::user_arm_vfpstate_entry* fpstate_;
  ::google::protobuf::uint32 tls_;
  friend void  protobuf_AddDesc_core_2darm_2eproto();
  friend void protobuf_AssignDesc_core_2darm_2eproto();
  friend void protobuf_ShutdownFile_core_2darm_2eproto();

  void InitAsDefaultInstance();
  static thread_info_arm* default_instance_;
};
// ===================================================================


// ===================================================================

// user_arm_regs_entry

// required uint32 r0 = 1;
inline bool user_arm_regs_entry::has_r0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_arm_regs_entry::set_has_r0() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_arm_regs_entry::clear_has_r0() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_arm_regs_entry::clear_r0() {
  r0_ = 0u;
  clear_has_r0();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r0() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r0)
  return r0_;
}
inline void user_arm_regs_entry::set_r0(::google::protobuf::uint32 value) {
  set_has_r0();
  r0_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r0)
}

// required uint32 r1 = 2;
inline bool user_arm_regs_entry::has_r1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_arm_regs_entry::set_has_r1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_arm_regs_entry::clear_has_r1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_arm_regs_entry::clear_r1() {
  r1_ = 0u;
  clear_has_r1();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r1() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r1)
  return r1_;
}
inline void user_arm_regs_entry::set_r1(::google::protobuf::uint32 value) {
  set_has_r1();
  r1_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r1)
}

// required uint32 r2 = 3;
inline bool user_arm_regs_entry::has_r2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_arm_regs_entry::set_has_r2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_arm_regs_entry::clear_has_r2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_arm_regs_entry::clear_r2() {
  r2_ = 0u;
  clear_has_r2();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r2() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r2)
  return r2_;
}
inline void user_arm_regs_entry::set_r2(::google::protobuf::uint32 value) {
  set_has_r2();
  r2_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r2)
}

// required uint32 r3 = 4;
inline bool user_arm_regs_entry::has_r3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_arm_regs_entry::set_has_r3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_arm_regs_entry::clear_has_r3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_arm_regs_entry::clear_r3() {
  r3_ = 0u;
  clear_has_r3();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r3() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r3)
  return r3_;
}
inline void user_arm_regs_entry::set_r3(::google::protobuf::uint32 value) {
  set_has_r3();
  r3_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r3)
}

// required uint32 r4 = 5;
inline bool user_arm_regs_entry::has_r4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_arm_regs_entry::set_has_r4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_arm_regs_entry::clear_has_r4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_arm_regs_entry::clear_r4() {
  r4_ = 0u;
  clear_has_r4();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r4() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r4)
  return r4_;
}
inline void user_arm_regs_entry::set_r4(::google::protobuf::uint32 value) {
  set_has_r4();
  r4_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r4)
}

// required uint32 r5 = 6;
inline bool user_arm_regs_entry::has_r5() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void user_arm_regs_entry::set_has_r5() {
  _has_bits_[0] |= 0x00000020u;
}
inline void user_arm_regs_entry::clear_has_r5() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void user_arm_regs_entry::clear_r5() {
  r5_ = 0u;
  clear_has_r5();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r5() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r5)
  return r5_;
}
inline void user_arm_regs_entry::set_r5(::google::protobuf::uint32 value) {
  set_has_r5();
  r5_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r5)
}

// required uint32 r6 = 7;
inline bool user_arm_regs_entry::has_r6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void user_arm_regs_entry::set_has_r6() {
  _has_bits_[0] |= 0x00000040u;
}
inline void user_arm_regs_entry::clear_has_r6() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void user_arm_regs_entry::clear_r6() {
  r6_ = 0u;
  clear_has_r6();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r6() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r6)
  return r6_;
}
inline void user_arm_regs_entry::set_r6(::google::protobuf::uint32 value) {
  set_has_r6();
  r6_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r6)
}

// required uint32 r7 = 8;
inline bool user_arm_regs_entry::has_r7() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void user_arm_regs_entry::set_has_r7() {
  _has_bits_[0] |= 0x00000080u;
}
inline void user_arm_regs_entry::clear_has_r7() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void user_arm_regs_entry::clear_r7() {
  r7_ = 0u;
  clear_has_r7();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r7() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r7)
  return r7_;
}
inline void user_arm_regs_entry::set_r7(::google::protobuf::uint32 value) {
  set_has_r7();
  r7_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r7)
}

// required uint32 r8 = 9;
inline bool user_arm_regs_entry::has_r8() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void user_arm_regs_entry::set_has_r8() {
  _has_bits_[0] |= 0x00000100u;
}
inline void user_arm_regs_entry::clear_has_r8() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void user_arm_regs_entry::clear_r8() {
  r8_ = 0u;
  clear_has_r8();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r8() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r8)
  return r8_;
}
inline void user_arm_regs_entry::set_r8(::google::protobuf::uint32 value) {
  set_has_r8();
  r8_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r8)
}

// required uint32 r9 = 10;
inline bool user_arm_regs_entry::has_r9() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void user_arm_regs_entry::set_has_r9() {
  _has_bits_[0] |= 0x00000200u;
}
inline void user_arm_regs_entry::clear_has_r9() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void user_arm_regs_entry::clear_r9() {
  r9_ = 0u;
  clear_has_r9();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r9() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r9)
  return r9_;
}
inline void user_arm_regs_entry::set_r9(::google::protobuf::uint32 value) {
  set_has_r9();
  r9_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r9)
}

// required uint32 r10 = 11;
inline bool user_arm_regs_entry::has_r10() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void user_arm_regs_entry::set_has_r10() {
  _has_bits_[0] |= 0x00000400u;
}
inline void user_arm_regs_entry::clear_has_r10() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void user_arm_regs_entry::clear_r10() {
  r10_ = 0u;
  clear_has_r10();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::r10() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.r10)
  return r10_;
}
inline void user_arm_regs_entry::set_r10(::google::protobuf::uint32 value) {
  set_has_r10();
  r10_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.r10)
}

// required uint32 fp = 12;
inline bool user_arm_regs_entry::has_fp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void user_arm_regs_entry::set_has_fp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void user_arm_regs_entry::clear_has_fp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void user_arm_regs_entry::clear_fp() {
  fp_ = 0u;
  clear_has_fp();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::fp() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.fp)
  return fp_;
}
inline void user_arm_regs_entry::set_fp(::google::protobuf::uint32 value) {
  set_has_fp();
  fp_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.fp)
}

// required uint32 ip = 13;
inline bool user_arm_regs_entry::has_ip() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void user_arm_regs_entry::set_has_ip() {
  _has_bits_[0] |= 0x00001000u;
}
inline void user_arm_regs_entry::clear_has_ip() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void user_arm_regs_entry::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::ip() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.ip)
  return ip_;
}
inline void user_arm_regs_entry::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.ip)
}

// required uint32 sp = 14;
inline bool user_arm_regs_entry::has_sp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void user_arm_regs_entry::set_has_sp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void user_arm_regs_entry::clear_has_sp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void user_arm_regs_entry::clear_sp() {
  sp_ = 0u;
  clear_has_sp();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::sp() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.sp)
  return sp_;
}
inline void user_arm_regs_entry::set_sp(::google::protobuf::uint32 value) {
  set_has_sp();
  sp_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.sp)
}

// required uint32 lr = 15;
inline bool user_arm_regs_entry::has_lr() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void user_arm_regs_entry::set_has_lr() {
  _has_bits_[0] |= 0x00004000u;
}
inline void user_arm_regs_entry::clear_has_lr() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void user_arm_regs_entry::clear_lr() {
  lr_ = 0u;
  clear_has_lr();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::lr() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.lr)
  return lr_;
}
inline void user_arm_regs_entry::set_lr(::google::protobuf::uint32 value) {
  set_has_lr();
  lr_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.lr)
}

// required uint32 pc = 16;
inline bool user_arm_regs_entry::has_pc() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void user_arm_regs_entry::set_has_pc() {
  _has_bits_[0] |= 0x00008000u;
}
inline void user_arm_regs_entry::clear_has_pc() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void user_arm_regs_entry::clear_pc() {
  pc_ = 0u;
  clear_has_pc();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::pc() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.pc)
  return pc_;
}
inline void user_arm_regs_entry::set_pc(::google::protobuf::uint32 value) {
  set_has_pc();
  pc_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.pc)
}

// required uint32 cpsr = 17;
inline bool user_arm_regs_entry::has_cpsr() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void user_arm_regs_entry::set_has_cpsr() {
  _has_bits_[0] |= 0x00010000u;
}
inline void user_arm_regs_entry::clear_has_cpsr() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void user_arm_regs_entry::clear_cpsr() {
  cpsr_ = 0u;
  clear_has_cpsr();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::cpsr() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.cpsr)
  return cpsr_;
}
inline void user_arm_regs_entry::set_cpsr(::google::protobuf::uint32 value) {
  set_has_cpsr();
  cpsr_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.cpsr)
}

// required uint32 orig_r0 = 18;
inline bool user_arm_regs_entry::has_orig_r0() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void user_arm_regs_entry::set_has_orig_r0() {
  _has_bits_[0] |= 0x00020000u;
}
inline void user_arm_regs_entry::clear_has_orig_r0() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void user_arm_regs_entry::clear_orig_r0() {
  orig_r0_ = 0u;
  clear_has_orig_r0();
}
inline ::google::protobuf::uint32 user_arm_regs_entry::orig_r0() const {
  // @@protoc_insertion_point(field_get:user_arm_regs_entry.orig_r0)
  return orig_r0_;
}
inline void user_arm_regs_entry::set_orig_r0(::google::protobuf::uint32 value) {
  set_has_orig_r0();
  orig_r0_ = value;
  // @@protoc_insertion_point(field_set:user_arm_regs_entry.orig_r0)
}

// -------------------------------------------------------------------

// user_arm_vfpstate_entry

// repeated uint64 vfp_regs = 1;
inline int user_arm_vfpstate_entry::vfp_regs_size() const {
  return vfp_regs_.size();
}
inline void user_arm_vfpstate_entry::clear_vfp_regs() {
  vfp_regs_.Clear();
}
inline ::google::protobuf::uint64 user_arm_vfpstate_entry::vfp_regs(int index) const {
  // @@protoc_insertion_point(field_get:user_arm_vfpstate_entry.vfp_regs)
  return vfp_regs_.Get(index);
}
inline void user_arm_vfpstate_entry::set_vfp_regs(int index, ::google::protobuf::uint64 value) {
  vfp_regs_.Set(index, value);
  // @@protoc_insertion_point(field_set:user_arm_vfpstate_entry.vfp_regs)
}
inline void user_arm_vfpstate_entry::add_vfp_regs(::google::protobuf::uint64 value) {
  vfp_regs_.Add(value);
  // @@protoc_insertion_point(field_add:user_arm_vfpstate_entry.vfp_regs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
user_arm_vfpstate_entry::vfp_regs() const {
  // @@protoc_insertion_point(field_list:user_arm_vfpstate_entry.vfp_regs)
  return vfp_regs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
user_arm_vfpstate_entry::mutable_vfp_regs() {
  // @@protoc_insertion_point(field_mutable_list:user_arm_vfpstate_entry.vfp_regs)
  return &vfp_regs_;
}

// required uint32 fpscr = 2;
inline bool user_arm_vfpstate_entry::has_fpscr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_arm_vfpstate_entry::set_has_fpscr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_arm_vfpstate_entry::clear_has_fpscr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_arm_vfpstate_entry::clear_fpscr() {
  fpscr_ = 0u;
  clear_has_fpscr();
}
inline ::google::protobuf::uint32 user_arm_vfpstate_entry::fpscr() const {
  // @@protoc_insertion_point(field_get:user_arm_vfpstate_entry.fpscr)
  return fpscr_;
}
inline void user_arm_vfpstate_entry::set_fpscr(::google::protobuf::uint32 value) {
  set_has_fpscr();
  fpscr_ = value;
  // @@protoc_insertion_point(field_set:user_arm_vfpstate_entry.fpscr)
}

// required uint32 fpexc = 3;
inline bool user_arm_vfpstate_entry::has_fpexc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_arm_vfpstate_entry::set_has_fpexc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_arm_vfpstate_entry::clear_has_fpexc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_arm_vfpstate_entry::clear_fpexc() {
  fpexc_ = 0u;
  clear_has_fpexc();
}
inline ::google::protobuf::uint32 user_arm_vfpstate_entry::fpexc() const {
  // @@protoc_insertion_point(field_get:user_arm_vfpstate_entry.fpexc)
  return fpexc_;
}
inline void user_arm_vfpstate_entry::set_fpexc(::google::protobuf::uint32 value) {
  set_has_fpexc();
  fpexc_ = value;
  // @@protoc_insertion_point(field_set:user_arm_vfpstate_entry.fpexc)
}

// required uint32 fpinst = 4;
inline bool user_arm_vfpstate_entry::has_fpinst() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_arm_vfpstate_entry::set_has_fpinst() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_arm_vfpstate_entry::clear_has_fpinst() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_arm_vfpstate_entry::clear_fpinst() {
  fpinst_ = 0u;
  clear_has_fpinst();
}
inline ::google::protobuf::uint32 user_arm_vfpstate_entry::fpinst() const {
  // @@protoc_insertion_point(field_get:user_arm_vfpstate_entry.fpinst)
  return fpinst_;
}
inline void user_arm_vfpstate_entry::set_fpinst(::google::protobuf::uint32 value) {
  set_has_fpinst();
  fpinst_ = value;
  // @@protoc_insertion_point(field_set:user_arm_vfpstate_entry.fpinst)
}

// required uint32 fpinst2 = 5;
inline bool user_arm_vfpstate_entry::has_fpinst2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_arm_vfpstate_entry::set_has_fpinst2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_arm_vfpstate_entry::clear_has_fpinst2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_arm_vfpstate_entry::clear_fpinst2() {
  fpinst2_ = 0u;
  clear_has_fpinst2();
}
inline ::google::protobuf::uint32 user_arm_vfpstate_entry::fpinst2() const {
  // @@protoc_insertion_point(field_get:user_arm_vfpstate_entry.fpinst2)
  return fpinst2_;
}
inline void user_arm_vfpstate_entry::set_fpinst2(::google::protobuf::uint32 value) {
  set_has_fpinst2();
  fpinst2_ = value;
  // @@protoc_insertion_point(field_set:user_arm_vfpstate_entry.fpinst2)
}

// -------------------------------------------------------------------

// thread_info_arm

// required uint64 clear_tid_addr = 1;
inline bool thread_info_arm::has_clear_tid_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void thread_info_arm::set_has_clear_tid_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void thread_info_arm::clear_has_clear_tid_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void thread_info_arm::clear_clear_tid_addr() {
  clear_tid_addr_ = GOOGLE_ULONGLONG(0);
  clear_has_clear_tid_addr();
}
inline ::google::protobuf::uint64 thread_info_arm::clear_tid_addr() const {
  // @@protoc_insertion_point(field_get:thread_info_arm.clear_tid_addr)
  return clear_tid_addr_;
}
inline void thread_info_arm::set_clear_tid_addr(::google::protobuf::uint64 value) {
  set_has_clear_tid_addr();
  clear_tid_addr_ = value;
  // @@protoc_insertion_point(field_set:thread_info_arm.clear_tid_addr)
}

// required uint32 tls = 2;
inline bool thread_info_arm::has_tls() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void thread_info_arm::set_has_tls() {
  _has_bits_[0] |= 0x00000002u;
}
inline void thread_info_arm::clear_has_tls() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void thread_info_arm::clear_tls() {
  tls_ = 0u;
  clear_has_tls();
}
inline ::google::protobuf::uint32 thread_info_arm::tls() const {
  // @@protoc_insertion_point(field_get:thread_info_arm.tls)
  return tls_;
}
inline void thread_info_arm::set_tls(::google::protobuf::uint32 value) {
  set_has_tls();
  tls_ = value;
  // @@protoc_insertion_point(field_set:thread_info_arm.tls)
}

// required .user_arm_regs_entry gpregs = 3;
inline bool thread_info_arm::has_gpregs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void thread_info_arm::set_has_gpregs() {
  _has_bits_[0] |= 0x00000004u;
}
inline void thread_info_arm::clear_has_gpregs() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void thread_info_arm::clear_gpregs() {
  if (gpregs_ != NULL) gpregs_->::user_arm_regs_entry::Clear();
  clear_has_gpregs();
}
inline const ::user_arm_regs_entry& thread_info_arm::gpregs() const {
  // @@protoc_insertion_point(field_get:thread_info_arm.gpregs)
  return gpregs_ != NULL ? *gpregs_ : *default_instance_->gpregs_;
}
inline ::user_arm_regs_entry* thread_info_arm::mutable_gpregs() {
  set_has_gpregs();
  if (gpregs_ == NULL) gpregs_ = new ::user_arm_regs_entry;
  // @@protoc_insertion_point(field_mutable:thread_info_arm.gpregs)
  return gpregs_;
}
inline ::user_arm_regs_entry* thread_info_arm::release_gpregs() {
  clear_has_gpregs();
  ::user_arm_regs_entry* temp = gpregs_;
  gpregs_ = NULL;
  return temp;
}
inline void thread_info_arm::set_allocated_gpregs(::user_arm_regs_entry* gpregs) {
  delete gpregs_;
  gpregs_ = gpregs;
  if (gpregs) {
    set_has_gpregs();
  } else {
    clear_has_gpregs();
  }
  // @@protoc_insertion_point(field_set_allocated:thread_info_arm.gpregs)
}

// required .user_arm_vfpstate_entry fpstate = 4;
inline bool thread_info_arm::has_fpstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void thread_info_arm::set_has_fpstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void thread_info_arm::clear_has_fpstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void thread_info_arm::clear_fpstate() {
  if (fpstate_ != NULL) fpstate_->::user_arm_vfpstate_entry::Clear();
  clear_has_fpstate();
}
inline const ::user_arm_vfpstate_entry& thread_info_arm::fpstate() const {
  // @@protoc_insertion_point(field_get:thread_info_arm.fpstate)
  return fpstate_ != NULL ? *fpstate_ : *default_instance_->fpstate_;
}
inline ::user_arm_vfpstate_entry* thread_info_arm::mutable_fpstate() {
  set_has_fpstate();
  if (fpstate_ == NULL) fpstate_ = new ::user_arm_vfpstate_entry;
  // @@protoc_insertion_point(field_mutable:thread_info_arm.fpstate)
  return fpstate_;
}
inline ::user_arm_vfpstate_entry* thread_info_arm::release_fpstate() {
  clear_has_fpstate();
  ::user_arm_vfpstate_entry* temp = fpstate_;
  fpstate_ = NULL;
  return temp;
}
inline void thread_info_arm::set_allocated_fpstate(::user_arm_vfpstate_entry* fpstate) {
  delete fpstate_;
  fpstate_ = fpstate;
  if (fpstate) {
    set_has_fpstate();
  } else {
    clear_has_fpstate();
  }
  // @@protoc_insertion_point(field_set_allocated:thread_info_arm.fpstate)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_core_2darm_2eproto__INCLUDED
