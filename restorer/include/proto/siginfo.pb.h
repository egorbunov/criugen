// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: siginfo.proto

#ifndef PROTOBUF_siginfo_2eproto__INCLUDED
#define PROTOBUF_siginfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_siginfo_2eproto();
void protobuf_AssignDesc_siginfo_2eproto();
void protobuf_ShutdownFile_siginfo_2eproto();

class siginfo_entry;
class signal_queue_entry;

// ===================================================================

class siginfo_entry : public ::google::protobuf::Message {
 public:
  siginfo_entry();
  virtual ~siginfo_entry();

  siginfo_entry(const siginfo_entry& from);

  inline siginfo_entry& operator=(const siginfo_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const siginfo_entry& default_instance();

  void Swap(siginfo_entry* other);

  // implements Message ----------------------------------------------

  siginfo_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const siginfo_entry& from);
  void MergeFrom(const siginfo_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes siginfo = 1;
  inline bool has_siginfo() const;
  inline void clear_siginfo();
  static const int kSiginfoFieldNumber = 1;
  inline const ::std::string& siginfo() const;
  inline void set_siginfo(const ::std::string& value);
  inline void set_siginfo(const char* value);
  inline void set_siginfo(const void* value, size_t size);
  inline ::std::string* mutable_siginfo();
  inline ::std::string* release_siginfo();
  inline void set_allocated_siginfo(::std::string* siginfo);

  // @@protoc_insertion_point(class_scope:siginfo_entry)
 private:
  inline void set_has_siginfo();
  inline void clear_has_siginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* siginfo_;
  friend void  protobuf_AddDesc_siginfo_2eproto();
  friend void protobuf_AssignDesc_siginfo_2eproto();
  friend void protobuf_ShutdownFile_siginfo_2eproto();

  void InitAsDefaultInstance();
  static siginfo_entry* default_instance_;
};
// -------------------------------------------------------------------

class signal_queue_entry : public ::google::protobuf::Message {
 public:
  signal_queue_entry();
  virtual ~signal_queue_entry();

  signal_queue_entry(const signal_queue_entry& from);

  inline signal_queue_entry& operator=(const signal_queue_entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const signal_queue_entry& default_instance();

  void Swap(signal_queue_entry* other);

  // implements Message ----------------------------------------------

  signal_queue_entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const signal_queue_entry& from);
  void MergeFrom(const signal_queue_entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .siginfo_entry signals = 1;
  inline int signals_size() const;
  inline void clear_signals();
  static const int kSignalsFieldNumber = 1;
  inline const ::siginfo_entry& signals(int index) const;
  inline ::siginfo_entry* mutable_signals(int index);
  inline ::siginfo_entry* add_signals();
  inline const ::google::protobuf::RepeatedPtrField< ::siginfo_entry >&
      signals() const;
  inline ::google::protobuf::RepeatedPtrField< ::siginfo_entry >*
      mutable_signals();

  // @@protoc_insertion_point(class_scope:signal_queue_entry)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::siginfo_entry > signals_;
  friend void  protobuf_AddDesc_siginfo_2eproto();
  friend void protobuf_AssignDesc_siginfo_2eproto();
  friend void protobuf_ShutdownFile_siginfo_2eproto();

  void InitAsDefaultInstance();
  static signal_queue_entry* default_instance_;
};
// ===================================================================


// ===================================================================

// siginfo_entry

// required bytes siginfo = 1;
inline bool siginfo_entry::has_siginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void siginfo_entry::set_has_siginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void siginfo_entry::clear_has_siginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void siginfo_entry::clear_siginfo() {
  if (siginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    siginfo_->clear();
  }
  clear_has_siginfo();
}
inline const ::std::string& siginfo_entry::siginfo() const {
  // @@protoc_insertion_point(field_get:siginfo_entry.siginfo)
  return *siginfo_;
}
inline void siginfo_entry::set_siginfo(const ::std::string& value) {
  set_has_siginfo();
  if (siginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    siginfo_ = new ::std::string;
  }
  siginfo_->assign(value);
  // @@protoc_insertion_point(field_set:siginfo_entry.siginfo)
}
inline void siginfo_entry::set_siginfo(const char* value) {
  set_has_siginfo();
  if (siginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    siginfo_ = new ::std::string;
  }
  siginfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:siginfo_entry.siginfo)
}
inline void siginfo_entry::set_siginfo(const void* value, size_t size) {
  set_has_siginfo();
  if (siginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    siginfo_ = new ::std::string;
  }
  siginfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:siginfo_entry.siginfo)
}
inline ::std::string* siginfo_entry::mutable_siginfo() {
  set_has_siginfo();
  if (siginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    siginfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:siginfo_entry.siginfo)
  return siginfo_;
}
inline ::std::string* siginfo_entry::release_siginfo() {
  clear_has_siginfo();
  if (siginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = siginfo_;
    siginfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void siginfo_entry::set_allocated_siginfo(::std::string* siginfo) {
  if (siginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete siginfo_;
  }
  if (siginfo) {
    set_has_siginfo();
    siginfo_ = siginfo;
  } else {
    clear_has_siginfo();
    siginfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:siginfo_entry.siginfo)
}

// -------------------------------------------------------------------

// signal_queue_entry

// repeated .siginfo_entry signals = 1;
inline int signal_queue_entry::signals_size() const {
  return signals_.size();
}
inline void signal_queue_entry::clear_signals() {
  signals_.Clear();
}
inline const ::siginfo_entry& signal_queue_entry::signals(int index) const {
  // @@protoc_insertion_point(field_get:signal_queue_entry.signals)
  return signals_.Get(index);
}
inline ::siginfo_entry* signal_queue_entry::mutable_signals(int index) {
  // @@protoc_insertion_point(field_mutable:signal_queue_entry.signals)
  return signals_.Mutable(index);
}
inline ::siginfo_entry* signal_queue_entry::add_signals() {
  // @@protoc_insertion_point(field_add:signal_queue_entry.signals)
  return signals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::siginfo_entry >&
signal_queue_entry::signals() const {
  // @@protoc_insertion_point(field_list:signal_queue_entry.signals)
  return signals_;
}
inline ::google::protobuf::RepeatedPtrField< ::siginfo_entry >*
signal_queue_entry::mutable_signals() {
  // @@protoc_insertion_point(field_mutable_list:signal_queue_entry.signals)
  return &signals_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_siginfo_2eproto__INCLUDED
